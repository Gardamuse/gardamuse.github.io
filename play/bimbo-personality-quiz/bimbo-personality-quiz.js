!function(e){var n={};function I(g){if(n[g])return n[g].exports;var t=n[g]={i:g,l:!1,exports:{}};return e[g].call(t.exports,t,t.exports,I),t.l=!0,t.exports}I.m=e,I.c=n,I.d=function(e,n,g){I.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:g})},I.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},I.t=function(e,n){if(1&n&&(e=I(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var g=Object.create(null);if(I.r(g),Object.defineProperty(g,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var t in e)I.d(g,t,function(n){return e[n]}.bind(null,t));return g},I.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return I.d(n,"a",n),n},I.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},I.p="",I(I.s=1)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SKIP", function() { return SKIP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "alias", function() { return alias; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cancelDeserialize", function() { return cancelDeserialize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createModelSchema", function() { return createModelSchema; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSimpleSchema", function() { return createSimpleSchema; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "custom", function() { return custom; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "date", function() { return date; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deserialize", function() { return deserialize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDefaultModelSchema", function() { return getDefaultModelSchema; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identifier", function() { return identifier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "list", function() { return list; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapAsArray", function() { return mapAsArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "object", function() { return object; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "optional", function() { return optional; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "primitive", function() { return primitive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "raw", function() { return raw; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reference", function() { return reference; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "serializable", function() { return serializable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "serialize", function() { return serialize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "serializeAll", function() { return serializeAll; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setDefaultModelSchema", function() { return setDefaultModelSchema; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "update", function() { return update; });\n/**\n * Creates a model schema that (de)serializes from / to plain javascript objects.\n * Its factory method is: `() => ({})`\n *\n * @example\n * const todoSchema = createSimpleSchema({\n *     title: true,\n *     done: true,\n * })\n *\n * const json = serialize(todoSchema, { title: \'Test\', done: false })\n * const todo = deserialize(todoSchema, json)\n *\n * @param props property mapping,\n * @returns model schema\n */\nfunction createSimpleSchema(props) {\n    return {\n        factory: function () {\n            return {};\n        },\n        props: props\n    };\n}\n\nvar formatters = {\n    j: function json(v) {\n        try {\n            return JSON.stringify(v);\n        }\n        catch (error) {\n            return "[UnexpectedJSONParseError]: " + error.message;\n        }\n    },\n    l: function symbol(s) {\n        return s.toString();\n    }\n};\nfunction invariant(condition, message) {\n    var variables = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        variables[_i - 2] = arguments[_i];\n    }\n    if (!condition) {\n        var variablesToLog_1 = [];\n        var index_1 = 0;\n        var formattedMessage = message.replace(/%([a-zA-Z%])/g, function (match, format) {\n            if (match === "%%")\n                return match;\n            var formatter = formatters[format];\n            if (typeof formatter === "function") {\n                var variable = variables[index_1++];\n                variablesToLog_1.push(variable);\n                return formatter(variable);\n            }\n            return match;\n        });\n        if (console && variablesToLog_1.length > 0) {\n            // eslint-disable-next-line no-console\n            console.log.apply(console, variablesToLog_1);\n        }\n        throw new Error("[serializr] " + (formattedMessage || "Illegal State"));\n    }\n}\n\nfunction GUARDED_NOOP(err) {\n    if (err)\n        // unguarded error...\n        throw new Error(err);\n}\nfunction once(fn) {\n    var fired = false;\n    return function () {\n        if (!fired) {\n            fired = true;\n            return fn.apply(null, arguments);\n        }\n        invariant(false, "callback was invoked twice");\n    };\n}\nfunction parallel(ar, processor, cb) {\n    // TODO: limit parallelization?\n    if (ar.length === 0)\n        return void cb(null, []);\n    var left = ar.filter(function (x) { return true; }).length; // only count items processed by forEach\n    var resultArray = [];\n    var failed = false;\n    ar.forEach(function (value, idx) {\n        processor(value, function (err, result) {\n            if (err) {\n                if (!failed) {\n                    failed = true;\n                    cb(err);\n                }\n            }\n            else {\n                resultArray[idx] = result;\n                if (--left === 0)\n                    cb(null, resultArray);\n            }\n        }, idx);\n    });\n}\nfunction isPrimitive(value) {\n    if (value === null)\n        return true;\n    return typeof value !== "object" && typeof value !== "function";\n}\nfunction isModelSchema(thing) {\n    return thing && thing.factory && thing.props;\n}\nfunction isPropSchema(thing) {\n    return thing && thing.serializer && thing.deserializer;\n}\nfunction isAliasedPropSchema(propSchema) {\n    return typeof propSchema === "object" && "string" == typeof propSchema.jsonname;\n}\nfunction isIdentifierPropSchema(propSchema) {\n    return typeof propSchema === "object" && propSchema.identifier === true;\n}\nfunction isAssignableTo(actualType, expectedType) {\n    var currentActualType = actualType;\n    while (currentActualType) {\n        if (currentActualType === expectedType)\n            return true;\n        currentActualType = currentActualType.extends;\n    }\n    return false;\n}\nfunction isMapLike(thing) {\n    return thing && typeof thing.keys === "function" && typeof thing.clear === "function";\n}\nfunction getIdentifierProp(modelSchema) {\n    invariant(isModelSchema(modelSchema), "modelSchema must be a ModelSchema");\n    // optimization: cache this lookup\n    var currentModelSchema = modelSchema;\n    while (currentModelSchema) {\n        for (var propName in currentModelSchema.props)\n            if (isIdentifierPropSchema(currentModelSchema.props[propName]))\n                return propName;\n        currentModelSchema = currentModelSchema.extends;\n    }\n    return undefined;\n}\nfunction processAdditionalPropArgs(propSchema, additionalArgs) {\n    if (additionalArgs) {\n        invariant(isPropSchema(propSchema), "expected a propSchema");\n        Object.assign(propSchema, additionalArgs);\n    }\n    return propSchema;\n}\n\n/**\n * Returns the standard model schema associated with a class / constructor function\n *\n */\nfunction getDefaultModelSchema(thing) {\n    if (!thing)\n        return undefined;\n    if (isModelSchema(thing))\n        return thing;\n    if (isModelSchema(thing.serializeInfo))\n        return thing.serializeInfo;\n    if (thing.constructor && thing.constructor.serializeInfo)\n        return thing.constructor.serializeInfo;\n}\n\n/**\n * Sets the default model schema for class / constructor function.\n * Everywhere where a model schema is required as argument, this class / constructor function\n * can be passed in as well (for example when using `object` or `ref`.\n *\n * When passing an instance of this class to `serialize`, it is not required to pass the model schema\n * as first argument anymore, because the default schema will be inferred from the instance type.\n *\n * @param clazz class or constructor function\n * @param modelSchema - a model schema\n * @returns model schema\n */\nfunction setDefaultModelSchema(clazz, modelSchema) {\n    invariant(isModelSchema(modelSchema), "expected modelSchema, got " + modelSchema);\n    clazz.serializeInfo = modelSchema;\n    return modelSchema;\n}\n\n/**\n * Creates a model schema that (de)serializes an object created by a constructor function (class).\n * The created model schema is associated by the targeted type as default model schema, see setDefaultModelSchema.\n * Its factory method is `() => new clazz()` (unless overriden, see third arg).\n *\n * @example\n * function Todo(title, done) {\n *     this.title = title\n *     this.done = done\n * }\n *\n * createModelSchema(Todo, {\n *     title: true,\n *     done: true,\n * })\n *\n * const json = serialize(new Todo(\'Test\', false))\n * const todo = deserialize(Todo, json)\n *\n * @param clazz class or constructor function\n * @param props property mapping\n * @param factory optional custom factory. Receives context as first arg\n * @returns model schema\n */\nfunction createModelSchema(clazz, props, factory) {\n    invariant(clazz !== Object, "one cannot simply put define a model schema for Object");\n    invariant(typeof clazz === "function", "expected constructor function");\n    var model = {\n        targetClass: clazz,\n        factory: factory ||\n            function () {\n                return new clazz();\n            },\n        props: props\n    };\n    // find super model\n    if (clazz.prototype.constructor !== Object) {\n        var s = getDefaultModelSchema(clazz.prototype.constructor);\n        if (s && s.targetClass !== clazz)\n            model.extends = s;\n    }\n    setDefaultModelSchema(clazz, model);\n    return model;\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/**\n * Indicates that this field contains a primitive value (or Date) which should be serialized literally to json.\n *\n * @example\n * createModelSchema(Todo, {\n *     title: primitive(),\n * })\n *\n * serialize(new Todo(\'test\')) // { "title": "test" }\n *\n * @param additionalArgs optional object that contains beforeDeserialize and/or afterDeserialize handlers\n */\nfunction primitive(additionalArgs) {\n    var result = {\n        serializer: function (value) {\n            invariant(isPrimitive(value), "this value is not primitive: " + value);\n            return value;\n        },\n        deserializer: function (jsonValue, done) {\n            if (!isPrimitive(jsonValue))\n                return void done("[serializr] this value is not primitive: " + jsonValue);\n            return void done(null, jsonValue);\n        }\n    };\n    result = processAdditionalPropArgs(result, additionalArgs);\n    return result;\n}\n\n/**\n * If you want to skip serialization or deserialization, you can use SKIP.\n *\n * @example\n * const schema = createSimpleSchema({\n *     a: custom(\n *         () => SKIP,\n *         v => v,\n *     ),\n * })\n * serialize(s, { a: 4 }) // {}\n * deserialize(s, { "a": 4 }) // { a: 4 }\n *\n * @example\n * // Skipping deserialization with computed mobx property.\n *\n * class TodoState {\n *     // Todo.category is @serializable(reference(...))\n *     \\@serializable(list(object(Todo)))\n *     \\@observable\n *     todos: Todo[]\n *\n *     // we want to serialize the categories, so that the references in\n *     // this.todos can be resolved, but we don\'t want to set this property\n *     \\@serializable(\n *         list(object(TodoCategory),\n *         { afterDeserialize: callback => callback(undefined, SKIP) }))\n *     \\@computed\n *     get categories() {\n *         return this.todos.map(todo => todo.category)\n *     }\n * }\n */\nvar SKIP = typeof Symbol !== "undefined" ? Symbol("SKIP") : { SKIP: true };\nvar _defaultPrimitiveProp = primitive();\n\n// Ugly way to get the parameter names since they aren\'t easily retrievable via reflection\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\nvar ARGUMENT_NAMES = /([^\\s,]+)/g;\nfunction getParamNames(func) {\n    var _a;\n    var fnStr = func.toString().replace(STRIP_COMMENTS, "");\n    return _a = fnStr.slice(fnStr.indexOf("(") + 1, fnStr.indexOf(")")).match(ARGUMENT_NAMES), (_a !== null && _a !== void 0 ? _a : []);\n}\nfunction serializableDecorator(propSchema, target, propName, descriptor) {\n    invariant(arguments.length >= 2, "too few arguments. Please use @serializable as property decorator");\n    // Fix for @serializable used in class constructor params (typescript)\n    var factory;\n    if (propName === undefined &&\n        typeof target === "function" &&\n        target.prototype &&\n        descriptor !== undefined &&\n        typeof descriptor === "number") {\n        invariant(isPropSchema(propSchema), "Constructor params must use alias(name)");\n        invariant(isAliasedPropSchema(propSchema), "Constructor params must use alias(name)");\n        var paramNames = getParamNames(target);\n        if (paramNames.length >= descriptor) {\n            propName = paramNames[descriptor];\n            propSchema.paramNumber = descriptor;\n            descriptor = undefined;\n            target = target.prototype;\n            // Create a factory so the constructor is called properly\n            factory = function (context) {\n                var _a;\n                var params = [];\n                var _loop_1 = function (i) {\n                    Object.keys(context.modelSchema.props).forEach(function (key) {\n                        var prop = context.modelSchema.props[key];\n                        if (prop.paramNumber === i) {\n                            params[i] = context.json[prop.jsonname];\n                        }\n                    });\n                };\n                for (var i = 0; i < target.constructor.length; i++) {\n                    _loop_1(i);\n                }\n                return (_a = target.constructor).bind.apply(_a, __spreadArrays([undefined], params));\n            };\n        }\n    }\n    invariant(typeof propName === "string", "incorrect usage of @serializable decorator");\n    var info = getDefaultModelSchema(target);\n    if (!info || !target.constructor.hasOwnProperty("serializeInfo"))\n        info = createModelSchema(target.constructor, {}, factory);\n    if (info && info.targetClass !== target.constructor)\n        // fixes typescript issue that tends to copy fields from super constructor to sub constructor in extends\n        info = createModelSchema(target.constructor, {}, factory);\n    info.props[propName] = propSchema;\n    // MWE: why won\'t babel work without?\n    if (descriptor && !descriptor.get && !descriptor.set)\n        descriptor.writable = true;\n    return descriptor;\n}\nfunction serializable(targetOrPropSchema, key, baseDescriptor) {\n    if (!key) {\n        // decorated with propSchema\n        var propSchema = targetOrPropSchema === true ? _defaultPrimitiveProp : targetOrPropSchema;\n        invariant(isPropSchema(propSchema), "@serializable expects prop schema");\n        var result = serializableDecorator.bind(null, propSchema);\n        return result;\n    }\n    else {\n        // decorated without arguments, treat as primitive\n        serializableDecorator(primitive(), targetOrPropSchema, key, baseDescriptor);\n    }\n}\n\nfunction serialize(modelSchemaOrInstance, arg2) {\n    invariant(arguments.length === 1 || arguments.length === 2, "serialize expects one or 2 arguments");\n    var instance = ((arg2 !== null && arg2 !== void 0 ? arg2 : modelSchemaOrInstance));\n    var schema = (arg2 && modelSchemaOrInstance);\n    if (Array.isArray(instance)) {\n        if (instance.length === 0)\n            return [];\n        // don\'t bother finding a schema\n        else if (!schema)\n            schema = getDefaultModelSchema(instance[0]);\n        else if (typeof schema !== "object")\n            schema = getDefaultModelSchema(schema);\n    }\n    else if (!schema) {\n        schema = getDefaultModelSchema(instance);\n    }\n    else if (typeof schema !== "object") {\n        schema = getDefaultModelSchema(schema);\n    }\n    var foundSchema = schema;\n    invariant(foundSchema, "Failed to find default schema for " + modelSchemaOrInstance);\n    if (Array.isArray(instance))\n        return instance.map(function (item) { return serializeWithSchema(foundSchema, item); });\n    return serializeWithSchema(foundSchema, instance);\n}\nfunction serializeWithSchema(schema, obj) {\n    invariant(schema && typeof schema === "object" && schema.props, "Expected schema");\n    invariant(obj && typeof obj === "object", "Expected object");\n    var res;\n    if (schema.extends)\n        res = serializeWithSchema(schema.extends, obj);\n    else {\n        // TODO: make invariant?:  invariant(!obj.constructor.prototype.constructor.serializeInfo, "object has a serializable supertype, but modelschema did not provide extends clause")\n        res = {};\n    }\n    Object.keys(schema.props).forEach(function (key) {\n        var propDef = schema.props[key];\n        if (!propDef)\n            return;\n        if (key === "*") {\n            serializeStarProps(schema, propDef, obj, res);\n            return;\n        }\n        if (propDef === true)\n            propDef = _defaultPrimitiveProp;\n        var jsonValue = propDef.serializer(obj[key], key, obj);\n        if (jsonValue === SKIP) {\n            return;\n        }\n        res[propDef.jsonname || key] = jsonValue;\n    });\n    return res;\n}\nfunction serializeStarProps(schema, propDef, obj, target) {\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (!(key in schema.props)) {\n            if (propDef === true || (propDef && (!propDef.pattern || propDef.pattern.test(key)))) {\n                var value = obj[key];\n                if (propDef === true) {\n                    if (isPrimitive(value)) {\n                        target[key] = value;\n                    }\n                }\n                else {\n                    var jsonValue = propDef.serializer(value, key, obj);\n                    if (jsonValue === SKIP) {\n                        return;\n                    }\n                    // TODO: propDef.jsonname could be a transform function on key\n                    target[key] = jsonValue;\n                }\n            }\n        }\n    }\n}\n\nvar rootContextCache = new WeakMap();\nvar Context = /** @class */ (function () {\n    function Context(parentContext, modelSchema, json, onReadyCb, customArgs) {\n        this.parentContext = parentContext;\n        this.modelSchema = modelSchema;\n        this.json = json;\n        this.onReadyCb = onReadyCb;\n        this.isRoot = !parentContext;\n        this.pendingCallbacks = 0;\n        this.pendingRefsCount = 0;\n        this.target = undefined; // always set this property using setTarget\n        this.hasError = false;\n        if (!parentContext) {\n            this.rootContext = this;\n            this.args = customArgs;\n            this.pendingRefs = {};\n            this.resolvedRefs = {};\n        }\n        else {\n            this.rootContext = parentContext.rootContext;\n            this.args = parentContext.args;\n        }\n    }\n    Context.prototype.createCallback = function (fn) {\n        var _this = this;\n        this.pendingCallbacks++;\n        // once: defend against user-land calling \'done\' twice\n        return once(function (err, value) {\n            if (err) {\n                if (!_this.hasError) {\n                    _this.hasError = true;\n                    _this.onReadyCb(err);\n                    rootContextCache.delete(_this);\n                }\n            }\n            else if (!_this.hasError) {\n                fn(value);\n                if (--_this.pendingCallbacks === _this.pendingRefsCount) {\n                    if (_this.pendingRefsCount > 0) {\n                        // all pending callbacks are pending reference resolvers. not good.\n                        _this.onReadyCb(new Error(\'Unresolvable references in json: "\' +\n                            Object.keys(_this.pendingRefs)\n                                .filter(function (uuid) { return _this.pendingRefs[uuid].length > 0; })\n                                .join(\'", "\') +\n                            \'"\'));\n                        rootContextCache.delete(_this);\n                    }\n                    else {\n                        _this.onReadyCb(null, _this.target);\n                        rootContextCache.delete(_this);\n                    }\n                }\n            }\n        });\n    };\n    // given an object with uuid, modelSchema, callback, awaits until the given uuid is available\n    // resolve immediately if possible\n    Context.prototype.await = function (modelSchema, uuid, callback) {\n        invariant(this.isRoot, "await can only be called on the root context");\n        if (uuid in this.resolvedRefs) {\n            var match = this.resolvedRefs[uuid].filter(function (resolved) {\n                return isAssignableTo(resolved.modelSchema, modelSchema);\n            })[0];\n            if (match)\n                return void callback(null, match.value);\n        }\n        this.pendingRefsCount++;\n        if (!this.pendingRefs[uuid])\n            this.pendingRefs[uuid] = [];\n        this.pendingRefs[uuid].push({\n            modelSchema: modelSchema,\n            uuid: uuid,\n            callback: callback\n        });\n    };\n    // given a model schema, uuid and value, resolve all references that were looking for this object\n    Context.prototype.resolve = function (modelSchema, uuid, value) {\n        invariant(this.isRoot, "resolve can only called on the root context");\n        if (!this.resolvedRefs[uuid])\n            this.resolvedRefs[uuid] = [];\n        this.resolvedRefs[uuid].push({\n            modelSchema: modelSchema,\n            value: value\n        });\n        if (uuid in this.pendingRefs) {\n            for (var i = this.pendingRefs[uuid].length - 1; i >= 0; i--) {\n                var opts = this.pendingRefs[uuid][i];\n                if (isAssignableTo(modelSchema, opts.modelSchema)) {\n                    this.pendingRefs[uuid].splice(i, 1);\n                    this.pendingRefsCount--;\n                    opts.callback(null, value);\n                }\n            }\n        }\n    };\n    // set target and update root context cache\n    Context.prototype.setTarget = function (target) {\n        if (this.isRoot && this.target) {\n            rootContextCache.delete(this.target);\n        }\n        this.target = target;\n        rootContextCache.set(this.target, this);\n    };\n    // call all remaining reference lookup callbacks indicating an error during ref resolution\n    Context.prototype.cancelAwaits = function () {\n        invariant(this.isRoot, "cancelAwaits can only be called on the root context");\n        var self = this;\n        Object.keys(this.pendingRefs).forEach(function (uuid) {\n            self.pendingRefs[uuid].forEach(function (refOpts) {\n                self.pendingRefsCount--;\n                refOpts.callback(new Error("Reference resolution canceled for " + uuid));\n            });\n        });\n        this.pendingRefs = {};\n        this.pendingRefsCount = 0;\n    };\n    return Context;\n}());\nfunction getTargetContext(target) {\n    return rootContextCache.get(target);\n}\n\n/*\n * Deserialization\n */\nfunction schemaHasAlias(schema, name) {\n    for (var key in schema.props) {\n        var propSchema = schema.props[key];\n        if (typeof propSchema === "object" && propSchema.jsonname === name)\n            return true;\n    }\n    return false;\n}\nfunction deserializeStarProps(context, schema, propDef, obj, json) {\n    var _loop_1 = function (key) {\n        if (!(key in schema.props) && !schemaHasAlias(schema, key)) {\n            var jsonValue = json[key];\n            if (propDef === true) {\n                // when deserializing we don\'t want to silently ignore \'unparseable data\' to avoid\n                // confusing bugs\n                invariant(isPrimitive(jsonValue), "encountered non primitive value while deserializing \'*\' properties in property \'" +\n                    key +\n                    "\': " +\n                    jsonValue);\n                obj[key] = jsonValue;\n            }\n            else if (propDef && (!propDef.pattern || propDef.pattern.test(key))) {\n                propDef.deserializer(jsonValue, \n                // for individual props, use root context based callbacks\n                // this allows props to complete after completing the object itself\n                // enabling reference resolving and such\n                context.rootContext.createCallback(function (r) { return r !== SKIP && (obj[key] = r); }), context);\n            }\n        }\n    };\n    for (var key in json) {\n        _loop_1(key);\n    }\n}\nfunction deserialize(clazzOrModelSchema, json, callback, customArgs) {\n    if (callback === void 0) { callback = GUARDED_NOOP; }\n    invariant(arguments.length >= 2, "deserialize expects at least 2 arguments");\n    var schema = getDefaultModelSchema(clazzOrModelSchema);\n    invariant(isModelSchema(schema), "first argument should be model schema");\n    if (Array.isArray(json)) {\n        var items_1 = [];\n        parallel(json, function (childJson, itemDone) {\n            var instance = deserializeObjectWithSchema(undefined, schema, childJson, itemDone, customArgs);\n            // instance is created synchronously so can be pushed\n            items_1.push(instance);\n        }, callback);\n        return items_1;\n    }\n    else {\n        return deserializeObjectWithSchema(undefined, schema, json, callback, customArgs);\n    }\n}\nfunction deserializeObjectWithSchema(parentContext, modelSchema, json, callback, customArgs) {\n    if (json === null || json === undefined || typeof json !== "object")\n        return void callback(null, null);\n    var context = new Context(parentContext, modelSchema, json, callback, customArgs);\n    var target = modelSchema.factory(context);\n    // todo async invariant\n    invariant(!!target, "No object returned from factory");\n    // TODO: make invariant?            invariant(schema.extends ||\n    // !target.constructor.prototype.constructor.serializeInfo, "object has a serializable\n    // supertype, but modelschema did not provide extends clause")\n    context.setTarget(target);\n    var lock = context.createCallback(GUARDED_NOOP);\n    deserializePropsWithSchema(context, modelSchema, json, target);\n    lock();\n    return target;\n}\nfunction deserializePropsWithSchema(context, modelSchema, json, target) {\n    var _a;\n    if (modelSchema.extends)\n        deserializePropsWithSchema(context, modelSchema.extends, json, target);\n    function deserializeProp(propDef, jsonValue, propName) {\n        var whenDone = context.rootContext.createCallback(function (r) { return r !== SKIP && (target[propName] = r); });\n        propDef.deserializer(jsonValue, \n        // for individual props, use root context based callbacks\n        // this allows props to complete after completing the object itself\n        // enabling reference resolving and such\n        function (err, newValue) {\n            return onAfterDeserialize(whenDone, err, newValue, jsonValue, json, propName, context, propDef);\n        }, context, target[propName] // initial value\n        );\n    }\n    var _loop_2 = function (key) {\n        var propDef = modelSchema.props[key];\n        if (!propDef)\n            return { value: void 0 };\n        if (key === "*") {\n            deserializeStarProps(context, modelSchema, propDef, target, json);\n            return { value: void 0 };\n        }\n        if (propDef === true)\n            propDef = _defaultPrimitiveProp;\n        var jsonAttr = (_a = propDef.jsonname, (_a !== null && _a !== void 0 ? _a : key));\n        invariant("symbol" !== typeof jsonAttr, "You must alias symbol properties. prop = %l", key);\n        var jsonValue = json[jsonAttr];\n        var propSchema = propDef;\n        var callbackDeserialize = function (err, jsonValue) {\n            if (!err && jsonValue !== undefined) {\n                deserializeProp(propSchema, jsonValue, key);\n            }\n        };\n        onBeforeDeserialize(callbackDeserialize, jsonValue, json, jsonAttr, context, propDef);\n    };\n    for (var _i = 0, _b = Object.keys(modelSchema.props); _i < _b.length; _i++) {\n        var key = _b[_i];\n        var state_1 = _loop_2(key);\n        if (typeof state_1 === "object")\n            return state_1.value;\n    }\n}\nvar onBeforeDeserialize = function (callback, jsonValue, jsonParentValue, propNameOrIndex, context, propDef) {\n    if (propDef && typeof propDef.beforeDeserialize === "function") {\n        propDef.beforeDeserialize(callback, jsonValue, jsonParentValue, propNameOrIndex, context, propDef);\n    }\n    else {\n        callback(null, jsonValue);\n    }\n};\nvar onAfterDeserialize = function (callback, err, newValue, jsonValue, jsonParentValue, propNameOrIndex, context, propDef) {\n    if (propDef && typeof propDef.afterDeserialize === "function") {\n        propDef.afterDeserialize(callback, err, newValue, jsonValue, jsonParentValue, propNameOrIndex, context, propDef);\n    }\n    else {\n        callback(err, newValue);\n    }\n};\n\n/**\n * `object` indicates that this property contains an object that needs to be (de)serialized\n * using its own model schema.\n *\n * N.B. mind issues with circular dependencies when importing model schema\'s from other files! The module resolve algorithm might expose classes before `createModelSchema` is executed for the target class.\n *\n * @example\n * class SubTask {}\n * class Todo {}\n *\n * createModelSchema(SubTask, {\n *     title: true,\n * })\n * createModelSchema(Todo, {\n *     title: true,\n *     subTask: object(SubTask),\n * })\n *\n * const todo = deserialize(Todo, {\n *     title: \'Task\',\n *     subTask: {\n *         title: \'Sub task\',\n *     },\n * })\n *\n * @param modelSchema to be used to (de)serialize the object\n * @param additionalArgs optional object that contains beforeDeserialize and/or afterDeserialize handlers\n */\nfunction object(modelSchema, additionalArgs) {\n    invariant(typeof modelSchema === "object" || typeof modelSchema === "function", "No modelschema provided. If you are importing it from another file be aware of circular dependencies.");\n    var result = {\n        serializer: function (item) {\n            modelSchema = getDefaultModelSchema(modelSchema);\n            invariant(isModelSchema(modelSchema), "expected modelSchema, got " + modelSchema);\n            if (item === null || item === undefined)\n                return item;\n            return serialize(modelSchema, item);\n        },\n        deserializer: function (childJson, done, context) {\n            modelSchema = getDefaultModelSchema(modelSchema);\n            invariant(isModelSchema(modelSchema), "expected modelSchema, got " + modelSchema);\n            if (childJson === null || childJson === undefined)\n                return void done(null, childJson);\n            return void deserializeObjectWithSchema(context, modelSchema, childJson, done, undefined);\n        }\n    };\n    result = processAdditionalPropArgs(result, additionalArgs);\n    return result;\n}\n\nfunction serializeAll(targetOrPattern, propertyType) {\n    var propSchema;\n    if (arguments.length === 1) {\n        propSchema = true;\n        return decorator(targetOrPattern);\n    }\n    else {\n        invariant(typeof targetOrPattern === "object" && targetOrPattern.test, "@serializeAll pattern doesn\'t have test");\n        if (typeof propertyType === "function") {\n            propertyType = object(propertyType);\n        }\n        if (true === propertyType) {\n            propertyType = _defaultPrimitiveProp;\n        }\n        invariant(isPropSchema(propertyType), "couldn\'t resolve schema");\n        propSchema = Object.assign({}, propertyType, {\n            pattern: targetOrPattern\n        });\n    }\n    function decorator(target) {\n        invariant(typeof target === "function", "@serializeAll can only be used as class decorator");\n        var info = getDefaultModelSchema(target);\n        if (!info) {\n            info = createModelSchema(target, {});\n            setDefaultModelSchema(target, info);\n        }\n        info.props["*"] = propSchema;\n        return target;\n    }\n    return decorator;\n}\n\n/*\n * Deserialization\n */\n/**\n * Cancels an asynchronous deserialization or update operation for the specified target object.\n * @param instance object that was previously returned from deserialize or update method\n */\nfunction cancelDeserialize(instance) {\n    invariant(typeof instance === "object" && instance && !Array.isArray(instance), "cancelDeserialize needs an object");\n    var context = getTargetContext(instance);\n    if (context) {\n        context.cancelAwaits();\n    }\n}\n\n/*\n * Update\n */\nfunction update(modelSchema, target, json, callback, customArgs) {\n    var inferModelSchema = arguments.length === 2 || typeof arguments[2] === "function"; // only target and json // callback as third arg\n    if (inferModelSchema) {\n        target = arguments[0];\n        modelSchema = getDefaultModelSchema(target);\n        json = arguments[1];\n        callback = arguments[2];\n        customArgs = arguments[3];\n    }\n    else {\n        modelSchema = getDefaultModelSchema(modelSchema);\n    }\n    invariant(isModelSchema(modelSchema), "update failed to determine schema");\n    invariant(typeof target === "object" && target && !Array.isArray(target), "update needs an object");\n    var context = new Context(undefined, modelSchema, json, callback || GUARDED_NOOP, customArgs);\n    context.setTarget(target);\n    var lock = context.createCallback(GUARDED_NOOP);\n    var result = deserializePropsWithSchema(context, modelSchema, json, target);\n    lock();\n    return result;\n}\n\nvar defaultRegisterFunction = function (id, value, context) {\n    context.rootContext.resolve(context.modelSchema, id, context.target);\n};\nfunction identifier(arg1, arg2) {\n    var registerFn;\n    var additionalArgs;\n    if (typeof arg1 === "function") {\n        registerFn = arg1;\n        additionalArgs = arg2;\n    }\n    else {\n        additionalArgs = arg1;\n    }\n    invariant(!additionalArgs || typeof additionalArgs === "object", "Additional property arguments should be an object, register function should be omitted or a funtion");\n    var result = {\n        identifier: true,\n        serializer: _defaultPrimitiveProp.serializer,\n        deserializer: function (jsonValue, done, context) {\n            _defaultPrimitiveProp.deserializer(jsonValue, function (err, id) {\n                defaultRegisterFunction(id, context.target, context);\n                if (registerFn)\n                    registerFn(id, context.target, context);\n                done(err, id);\n            }, context);\n        }\n    };\n    result = processAdditionalPropArgs(result, additionalArgs);\n    return result;\n}\n\n/**\n * Similar to primitive, serializes instances of Date objects\n *\n * @param additionalArgs optional object that contains beforeDeserialize and/or afterDeserialize handlers\n */\nfunction date(additionalArgs) {\n    // TODO: add format option?\n    var result = {\n        serializer: function (value) {\n            if (value === null || value === undefined)\n                return value;\n            invariant(value instanceof Date, "Expected Date object");\n            return value.getTime();\n        },\n        deserializer: function (jsonValue, done) {\n            if (jsonValue === null || jsonValue === undefined)\n                return void done(null, jsonValue);\n            return void done(null, new Date(jsonValue));\n        }\n    };\n    result = processAdditionalPropArgs(result, additionalArgs);\n    return result;\n}\n\n/**\n * Alias indicates that this model property should be named differently in the generated json.\n * Alias should be the outermost propschema.\n *\n * @example\n * createModelSchema(Todo, {\n *     title: alias(\'task\', primitive()),\n * })\n *\n * serialize(new Todo(\'test\')) // { "task": "test" }\n *\n * @param name name of the json field to be used for this property\n * @param propSchema propSchema to (de)serialize the contents of this field\n */\nfunction alias(name, propSchema) {\n    invariant(name && typeof name === "string", "expected prop name as first argument");\n    propSchema = !propSchema || propSchema === true ? _defaultPrimitiveProp : propSchema;\n    invariant(isPropSchema(propSchema), "expected prop schema as second argument");\n    invariant(!isAliasedPropSchema(propSchema), "provided prop is already aliased");\n    return {\n        jsonname: name,\n        serializer: propSchema.serializer,\n        deserializer: propSchema.deserializer,\n        identifier: isIdentifierPropSchema(propSchema) || undefined,\n        beforeDeserialize: propSchema.beforeDeserialize,\n        afterDeserialize: propSchema.afterDeserialize\n    };\n}\n\nfunction custom(serializer, deserializer, additionalArgs) {\n    invariant(typeof serializer === "function", "first argument should be function");\n    invariant(typeof deserializer === "function", "second argument should be a function or promise");\n    var result = {\n        serializer: serializer,\n        deserializer: function (jsonValue, done, context, oldValue) {\n            var result = deserializer(jsonValue, context, oldValue, done);\n            // FIXME: checking for result === undefined instead of Function.length\n            // would be nicer, but strictly speaking a breaking change.\n            if (deserializer.length !== 4) {\n                done(null, result);\n            }\n        }\n    };\n    result = processAdditionalPropArgs(result, additionalArgs);\n    return result;\n}\n\n/**\n * Optional indicates that this model property shouldn\'t be serialized if it isn\'t present.\n *\n * Note that if we use `optional` together with another prop schema such as `custom`,\n * the prop schema for `custom` will be applied first and the result of that serialization\n * will be used to feed into `optional`.\n *\n * @example\n * createModelSchema(Todo, {\n *     title: optional(primitive()),\n *     user: optional(custom(value => value.name, () => SKIP))\n * })\n *\n * serialize(new Todo()) // {}\n *\n * @param propSchema propSchema to (de)serialize the contents of this field\n */\nfunction optional(propSchema) {\n    propSchema = !propSchema || propSchema === true ? _defaultPrimitiveProp : propSchema;\n    invariant(isPropSchema(propSchema), "expected prop schema as second argument");\n    var propSerializer = propSchema.serializer;\n    invariant(typeof propSerializer === "function", "expected prop schema to have a callable serializer");\n    var serializer = function (sourcePropertyValue, key, sourceObject) {\n        var result = propSerializer(sourcePropertyValue, key, sourceObject);\n        if (result === undefined) {\n            return SKIP;\n        }\n        return result;\n    };\n    return Object.assign({}, propSchema, { serializer: serializer });\n}\n\nfunction createDefaultRefLookup(modelSchema) {\n    return function resolve(uuid, cb, context) {\n        context.rootContext.await(modelSchema, uuid, cb);\n    };\n}\nfunction reference(target, lookupFnOrAdditionalPropArgs, additionalArgs) {\n    invariant(!!target, "No modelSchema provided. If you are importing it from another file be aware of circular dependencies.");\n    var lookupFn = "function" === typeof lookupFnOrAdditionalPropArgs\n        ? lookupFnOrAdditionalPropArgs\n        : undefined;\n    additionalArgs =\n        additionalArgs ||\n            (lookupFn ? undefined : lookupFnOrAdditionalPropArgs);\n    var initialized = false;\n    var childIdentifierAttribute;\n    function initialize() {\n        initialized = true;\n        invariant(typeof target !== "string" || typeof lookupFn === "function", "if the reference target is specified by attribute name, a lookup function is required");\n        invariant(!lookupFn || typeof lookupFn === "function", "second argument should be a lookup function or additional arguments object");\n        if (typeof target === "string") {\n            childIdentifierAttribute = target;\n        }\n        else {\n            var modelSchema = getDefaultModelSchema(target);\n            invariant(isModelSchema(modelSchema), "expected model schema or string as first argument for \'ref\', got " + modelSchema);\n            lookupFn = lookupFn || createDefaultRefLookup(modelSchema);\n            childIdentifierAttribute = getIdentifierProp(modelSchema);\n            invariant(!!childIdentifierAttribute, "provided model schema doesn\'t define an identifier() property and cannot be used by \'ref\'.");\n        }\n    }\n    var result = {\n        serializer: function (item) {\n            if (!initialized)\n                initialize();\n            return item ? item[childIdentifierAttribute] : null;\n        },\n        deserializer: function (identifierValue, done, context) {\n            if (!initialized)\n                initialize();\n            if (identifierValue === null || identifierValue === undefined)\n                done(null, identifierValue);\n            else\n                lookupFn(identifierValue, done, context);\n        }\n    };\n    result = processAdditionalPropArgs(result, additionalArgs);\n    return result;\n}\n\n/**\n * List indicates that this property contains a list of things.\n * Accepts a sub model schema to serialize the contents\n *\n * @example\n * class SubTask {}\n * class Task {}\n * class Todo {}\n *\n * createModelSchema(SubTask, {\n *     title: true,\n * })\n * createModelSchema(Todo, {\n *     title: true,\n *     subTask: list(object(SubTask)),\n * })\n *\n * const todo = deserialize(Todo, {\n *     title: \'Task\',\n *     subTask: [\n *         {\n *             title: \'Sub task 1\',\n *         },\n *     ],\n * })\n *\n * @param propSchema to be used to (de)serialize the contents of the array\n * @param additionalArgs optional object that contains beforeDeserialize and/or afterDeserialize handlers\n */\nfunction list(propSchema, additionalArgs) {\n    propSchema = propSchema || _defaultPrimitiveProp;\n    invariant(isPropSchema(propSchema), "expected prop schema as first argument");\n    invariant(!isAliasedPropSchema(propSchema), "provided prop is aliased, please put aliases first");\n    var result = {\n        serializer: function (ar) {\n            if (ar === undefined) {\n                return SKIP;\n            }\n            invariant(ar && "length" in ar && "map" in ar, "expected array (like) object");\n            return ar.map(propSchema.serializer);\n        },\n        deserializer: function (jsonArray, done, context) {\n            if (!Array.isArray(jsonArray))\n                return void done("[serializr] expected JSON array");\n            function processItem(jsonValue, onItemDone, itemIndex) {\n                function callbackBefore(err, value) {\n                    if (!err) {\n                        propSchema.deserializer(value, deserializeDone, context);\n                    }\n                    else {\n                        onItemDone(err);\n                    }\n                }\n                function deserializeDone(err, value) {\n                    if (typeof propSchema.afterDeserialize === "function") {\n                        onAfterDeserialize(onItemDone, err, value, jsonValue, jsonArray, itemIndex, context, propSchema);\n                    }\n                    else {\n                        onItemDone(err, value);\n                    }\n                }\n                onBeforeDeserialize(callbackBefore, jsonValue, jsonArray, itemIndex, context, propSchema);\n            }\n            parallel(jsonArray, processItem, function (err, result) {\n                if (err) {\n                    return void done(err);\n                }\n                done(undefined, result.filter(function (x) { return SKIP !== x; }));\n            });\n        }\n    };\n    result = processAdditionalPropArgs(result, additionalArgs);\n    return result;\n}\n\n/**\n * Similar to list, but map represents a string keyed dynamic collection.\n * This can be both plain objects (default) or ES6 Map like structures.\n * This will be inferred from the initial value of the targetted attribute.\n *\n * @param additionalArgs optional object that contains beforeDeserialize and/or afterDeserialize handlers\n */\nfunction map(propSchema, additionalArgs) {\n    propSchema = propSchema || _defaultPrimitiveProp;\n    invariant(isPropSchema(propSchema), "expected prop schema as first argument");\n    invariant(!isAliasedPropSchema(propSchema), "provided prop is aliased, please put aliases first");\n    var result = {\n        serializer: function (m) {\n            invariant(m && typeof m === "object", "expected object or Map");\n            var result = {};\n            if (isMapLike(m)) {\n                m.forEach(function (value, key) { return (result[key] = propSchema.serializer(value, key, m)); });\n            }\n            else {\n                for (var key in m)\n                    result[key] = propSchema.serializer(m[key], key, m);\n            }\n            return result;\n        },\n        deserializer: function (jsonObject, done, context, oldValue) {\n            if (!jsonObject || typeof jsonObject !== "object")\n                return void done("[serializr] expected JSON object");\n            var keys = Object.keys(jsonObject);\n            list(propSchema, additionalArgs).deserializer(keys.map(function (key) {\n                return jsonObject[key];\n            }), function (err, values) {\n                if (err)\n                    return void done(err);\n                var isMap = isMapLike(oldValue);\n                var newValue;\n                if (isMap) {\n                    // if the oldValue is a map, we recycle it\n                    // there are many variations and this way we don\'t have to\n                    // know about the original constructor\n                    oldValue.clear();\n                    newValue = oldValue;\n                }\n                else\n                    newValue = {};\n                for (var i = 0, l = keys.length; i < l; i++)\n                    if (isMap)\n                        newValue.set(keys[i], values[i]);\n                    else\n                        newValue[keys[i]] = values[i];\n                done(null, newValue);\n            }, context);\n        }\n    };\n    result = processAdditionalPropArgs(result, additionalArgs);\n    return result;\n}\n\n/**\n * Similar to map, mapAsArray can be used to serialize a map-like collection where the key is\n * contained in the \'value object\'. Example: consider Map<id: number, customer: Customer> where the\n * Customer object has the id stored on itself. mapAsArray stores all values from the map into an\n * array which is serialized. Deserialization returns a ES6 Map or plain object object where the\n * `keyPropertyName` of each object is used for keys. For ES6 maps this has the benefit of being\n * allowed to have non-string keys in the map. The serialized json also may be slightly more\n * compact.\n *\n * @param keyPropertyName - the property of stored objects used as key in the map\n * @param additionalArgs optional object that contains beforeDeserialize and/or afterDeserialize handlers\n */\nfunction mapAsArray(propSchema, keyPropertyName, additionalArgs) {\n    propSchema = propSchema || _defaultPrimitiveProp;\n    invariant(isPropSchema(propSchema), "expected prop schema as first argument");\n    invariant(!!keyPropertyName, "expected key property name as second argument");\n    var result = {\n        serializer: function (m) {\n            invariant(m && typeof m === "object", "expected object or Map");\n            var result = [];\n            // eslint-disable-next-line no-unused-vars\n            if (isMapLike(m)) {\n                m.forEach(function (value, key) { return result.push(propSchema.serializer(value, key, m)); });\n            }\n            else {\n                for (var key in m)\n                    result.push(propSchema.serializer(m[key], key, m));\n            }\n            return result;\n        },\n        deserializer: function (jsonArray, done, context, oldValue) {\n            list(propSchema, additionalArgs).deserializer(jsonArray, function (err, values) {\n                if (err)\n                    return void done(err);\n                var oldValueIsMap = isMapLike(oldValue);\n                var newValue;\n                if (oldValueIsMap) {\n                    oldValue.clear();\n                    newValue = oldValue;\n                }\n                else {\n                    newValue = {};\n                }\n                for (var i = 0, l = jsonArray.length; i < l; i++)\n                    if (oldValueIsMap)\n                        newValue.set(values[i][keyPropertyName], values[i]);\n                    else\n                        newValue[values[i][keyPropertyName].toString()] = values[i];\n                done(null, newValue);\n            }, context, undefined);\n        }\n    };\n    result = processAdditionalPropArgs(result, additionalArgs);\n    return result;\n}\n\n/**\n * Indicates that this field is only need to putted in the serialized json or\n * deserialized instance, without any transformations. Stay with its original value\n *\n * @example\n * createModelSchema(Model, {\n *     rawData: raw(),\n * })\n *\n * serialize(new Model({ rawData: { a: 1, b: [], c: {} } } }))\n * // { "rawData": { a: 1, b: [], c: {} } } }\n *\n * @param additionalArgs optional object that contains beforeDeserialize and/or afterDeserialize handlers\n */\nfunction raw(additionalArgs) {\n    var result = {\n        serializer: function (value) {\n            return value;\n        },\n        deserializer: function (jsonValue, done) {\n            return void done(null, jsonValue);\n        }\n    };\n    result = processAdditionalPropArgs(result, additionalArgs);\n    return result;\n}\n\n\n//# sourceMappingURL=serializr.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')},function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.nextQuestion = exports.state = void 0;\n__webpack_require__(4);\nvar bimboType_1 = __webpack_require__(8);\nvar question_1 = __webpack_require__(26);\nvar serializr_1 = __webpack_require__(0);\nvar jsonBimboTypes = __webpack_require__(27);\nvar jsonPersonalityQuestions = __webpack_require__(28);\nvar answer_1 = __webpack_require__(3);\nvar Util_1 = __webpack_require__(2);\nvar kd = __webpack_require__(29);\nvar maxPersonalities = 2; // Maximum number of personalities in result\nvar debug = false;\nvar appArea = document.getElementById("bimbo-personality-quiz");\nvar State = /** @class */ (function () {\n    function State(questions) {\n        this.currentQuestionIndex = 0;\n        this.answers = {};\n        this.questionsDict = {};\n        this.bimboTypes = [];\n        this.questions = questions;\n        for (var _i = 0, questions_1 = questions; _i < questions_1.length; _i++) {\n            var q = questions_1[_i];\n            this.questionsDict[q.id] = q;\n        }\n    }\n    State.prototype.reset = function () {\n        this.answers = {};\n        this.currentQuestionIndex = 0;\n    };\n    return State;\n}());\nvar tmpQ = new question_1.Question("tmp", "Question", [new answer_1.Answer("0", "Answer", "")]);\n//export const state = new State([tmpQ])\nexports.state = new State(serializr_1.deserialize(question_1.Question, jsonPersonalityQuestions));\nexports.state.bimboTypes = serializr_1.deserialize(bimboType_1.BimboType, jsonBimboTypes);\nfunction nextQuestion() {\n    if (exports.state.currentQuestionIndex < exports.state.questions.length) {\n        var q = exports.state.questions[exports.state.currentQuestionIndex];\n        appArea.innerHTML = q.toHtml();\n        q.register();\n        exports.state.currentQuestionIndex += 1;\n    }\n    else {\n        var posteriors = bimboType_1.BimboType.calcPosterior(exports.state.answers, exports.state.bimboTypes);\n        posteriors.sort(function (a, b) {\n            return b.conditional - a.conditional;\n        });\n        // Only the most likely types\n        var top_2 = [];\n        var sum = 0;\n        for (var _i = 0, posteriors_1 = posteriors; _i < posteriors_1.length; _i++) {\n            var p = posteriors_1[_i];\n            sum += p.conditional;\n            top_2.push(p);\n            if (!debug && (top_2.length >= maxPersonalities || sum > 0.9))\n                break;\n        }\n        var params_1 = new URLSearchParams(location.search);\n        //console.log(params.getAll("name"))\n        params_1.delete("type");\n        for (var _a = 0, top_1 = top_2; _a < top_1.length; _a++) {\n            var entry = top_1[_a];\n            params_1.append("type", Util_1.simpleEncode(entry.bimbo.id));\n            params_1.append("likely", entry.conditional.toFixed(3));\n        }\n        //console.log(params.getAll("type"))\n        window.history.replaceState({}, "", location.pathname + "?" + params_1);\n        appArea.innerHTML = "\\n        <h1 class=\\"results-title\\">Your Bimbo Personality is...</h1>\\n        <div class=\\"bimbo-cards\\">\\n            " + top_2.map(function (entry) {\n            return entry.bimbo.toHtml(entry.conditional);\n        }).join("") + "\\n        </div>\\n        <div style=\\"margin-top: 40px;text-align: center;\\">\\n           <h4 style=\\"display: inline;\\">Likelihood of something else: </h4>\\n           <p style=\\"display: inline; font-size: 1em;\\">\\n               " + ((1 - sum) * 100).toFixed(1) + " %\\n           </p>\\n        </div>\\n        <br><br>\\n        <div class=\\"window retake-dialogue\\">\\n            <h3>Retake quiz?</h3>\\n            <p> Not happy with the result? Want to change an answer? Or try filling out the quiz for your favourite character!</p>\\n            <div class=\\"answer\\" id=\\"retakeB\\"> <h3> Yes, retake quiz. </h3> </div>\\n        </div>\\n      ";\n        document.getElementById(\'retakeB\').addEventListener(\'click\', function () {\n            appArea.scrollIntoView();\n            reset();\n        });\n    }\n}\nexports.nextQuestion = nextQuestion;\nfunction reset() {\n    exports.state.reset();\n    nextQuestion();\n}\nfunction classStats(samples) {\n    var stats = bimboType_1.BimboType.calcVolumeSample(exports.state.questions, samples);\n    stats.sort(function (a, b) { return b.wins - a.wins; });\n    for (var bimbo in stats) {\n        var b = stats[bimbo];\n        console.log(b.bimbo.padEnd(11) + ": wins = " + b.wins + ", avg: " + (100 * b.likelihood / b.wins).toFixed(1) + "%");\n    }\n}\nfunction questionStats() {\n    for (var _i = 0, _a = exports.state.questions; _i < _a.length; _i++) {\n        var question = _a[_i];\n        var totalAnswerData = Array(question.answers.length).fill(0);\n        for (var _b = 0, _c = exports.state.bimboTypes; _b < _c.length; _b++) {\n            var bimbo = _c[_b];\n            for (var i = 0; i < question.answers.length; i++) {\n                totalAnswerData[i] += bimbo.answerData[question.id][i];\n            }\n        }\n        console.log(question.id.padEnd(16) + ": " + Util_1.scaleTo1(totalAnswerData).map(function (x) { return (x * 100).toFixed(0).padEnd(2); }));\n    }\n}\nfunction printStats() {\n    classStats(20000);\n    console.log("-------------------------------------");\n    questionStats();\n    console.log("-------------------------------------");\n}\nif (debug) {\n    printStats();\n}\n// Load from URL search string\nvar params = new URLSearchParams(location.search);\nvar paramTypes = params.getAll("type");\nvar paramLikelihoods = params.getAll("likely");\nvar loadedTypes = [];\nif (paramTypes.length > 0) {\n    var _loop_1 = function (i) {\n        var t = paramTypes[i];\n        var bimbo = exports.state.bimboTypes.find(function (b) {\n            return b.name == Util_1.simpleDecode(t);\n        });\n        var likely = undefined;\n        if (paramLikelihoods.length > i)\n            likely = parseFloat(paramLikelihoods[i]);\n        if (bimbo != undefined) {\n            loadedTypes.push({ bimbo: bimbo, likely: likely });\n        }\n    };\n    for (var i = 0; i < paramTypes.length; i++) {\n        _loop_1(i);\n    }\n}\nif (loadedTypes.length > 0) {\n    appArea.scrollIntoView();\n    appArea.innerHTML = "\\n        <h1 class=\\"results-title\\">Your Bimbo Personality is...</h1>\\n        <div class=\\"bimbo-cards\\">\\n            " + loadedTypes.map(function (entry) {\n        return entry.bimbo.toHtml(entry.likely);\n    }).join("") + "\\n        </div>\\n        <br><br>\\n        <div class=\\"window retake-dialogue\\">\\n            <h3>Retake quiz?</h3>\\n            <p> Not happy with the result? Want to change an answer? Or try filling out the quiz for your favourite character!</p>\\n            <div class=\\"answer\\" id=\\"retakeB\\"> <h3> Yes, retake quiz. </h3> </div>\\n        </div>\\n        ";\n    document.getElementById(\'retakeB\').addEventListener(\'click\', function () {\n        // Remove any search params\n        window.history.replaceState({}, "", "" + location.pathname);\n        appArea.scrollIntoView();\n        reset();\n    });\n}\nelse {\n    // Remove any search params\n    window.history.replaceState({}, "", "" + location.pathname);\n    // Go to first question\n    nextQuestion();\n}\n// Start main loop for key detection\nkd.run(function () {\n    kd.tick();\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n')},function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.scaleTo1 = exports.simpleDecode = exports.simpleEncode = exports.wait = exports.mergeAll = exports.shuffleArray = exports.uuidv4 = exports.download = exports.clamp = exports.capitalize = void 0;\nvar js_cipher_1 = __webpack_require__(9);\nfunction capitalize(s) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n}\nexports.capitalize = capitalize;\nfunction clamp(min, value, max) {\n    return Math.min(max, Math.max(min, value));\n}\nexports.clamp = clamp;\nfunction download(filename, text) {\n    var element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', filename);\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n}\nexports.download = download;\nfunction uuidv4() {\n    return (\"\" + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, function (c) {\n        return (Number(c) ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> Number(c) / 4).toString(16);\n    });\n}\nexports.uuidv4 = uuidv4;\nfunction shuffleArray(array) {\n    var _a;\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        _a = [array[j], array[i]], array[i] = _a[0], array[j] = _a[1];\n    }\n}\nexports.shuffleArray = shuffleArray;\n/**\n *\n * @param objects List of objects to be merged.\n * @param merge Function describing how two compatible objects should be merged\n * @param mergable Function returning True if two objects are compatible and can be merged\n * @param includeMerge Function returning True if the merged object should be accepted.\n *                      If False, the merged object will not be included in the result.\n *\n * @return List of merged objects.\n */\nfunction mergeAll(objects, merge, mergable, includeMerge) {\n    if (includeMerge === void 0) { includeMerge = function () { return true; }; }\n    var merged = [];\n    // Loop backwards so that we can remove from list\n    for (var i = objects.length - 1; i >= 0;) {\n        // Pick the last object A and remove it from list.\n        var a = objects.splice(i, 1)[0];\n        // Loop backwards over all remaining objects and find those that can be merged to A\n        for (var j = objects.length - 1; j >= 0; j--) {\n            // Merge A with all objects it can be merged with. Merged objects are removed after merge.\n            if (mergable(a, objects[j])) {\n                a = merge(a, objects.splice(j, 1)[0]);\n            }\n        }\n        // Evaluate merged object. If it is accepted, add it to the result.\n        if (includeMerge(a)) {\n            merged.push(a);\n        }\n        // Go to the last object remaining in list. This will be next A.\n        i = objects.length - 1;\n    }\n    return merged;\n}\nexports.mergeAll = mergeAll;\nfunction wait(ms) {\n    return new Promise(function (r, j) {\n        setTimeout(r, ms);\n    });\n}\nexports.wait = wait;\nvar cipher = new js_cipher_1.Cipher();\nfunction simpleEncode(s) {\n    return cipher.encrypt(s, 3);\n}\nexports.simpleEncode = simpleEncode;\nfunction simpleDecode(s) {\n    return cipher.decrypt(s, 3);\n}\nexports.simpleDecode = simpleDecode;\n/**\n * Scales a list of numbers so that their sum is 1.\n * @param xs\n */\nfunction scaleTo1(xs) {\n    var sum = xs.reduce(function (a, b) { return a + b; });\n    var newXs;\n    if (sum != 0) {\n        newXs = xs.map(function (x) { return x / sum; });\n    }\n    else {\n        newXs = xs.map(function (x) { return 1 / xs.length; });\n    }\n    return newXs;\n}\nexports.scaleTo1 = scaleTo1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdXRpbC9VdGlsLnRzPzNiYjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLGtCQUFrQixtQkFBTyxDQUFDLENBQVc7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0Q7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsT0FBTztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyw2QkFBNkIsYUFBYSxHQUFHO0FBQy9FO0FBQ0E7QUFDQSxvQ0FBb0MsUUFBUTtBQUM1QztBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsUUFBUTtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsY0FBYyxFQUFFO0FBQ3pEO0FBQ0E7QUFDQSxxQ0FBcUMsZ0JBQWdCLEVBQUU7QUFDdkQ7QUFDQTtBQUNBLHFDQUFxQyxzQkFBc0IsRUFBRTtBQUM3RDtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNjYWxlVG8xID0gZXhwb3J0cy5zaW1wbGVEZWNvZGUgPSBleHBvcnRzLnNpbXBsZUVuY29kZSA9IGV4cG9ydHMud2FpdCA9IGV4cG9ydHMubWVyZ2VBbGwgPSBleHBvcnRzLnNodWZmbGVBcnJheSA9IGV4cG9ydHMudXVpZHY0ID0gZXhwb3J0cy5kb3dubG9hZCA9IGV4cG9ydHMuY2xhbXAgPSBleHBvcnRzLmNhcGl0YWxpemUgPSB2b2lkIDA7XG52YXIganNfY2lwaGVyXzEgPSByZXF1aXJlKFwianMtY2lwaGVyXCIpO1xuZnVuY3Rpb24gY2FwaXRhbGl6ZShzKSB7XG4gICAgcmV0dXJuIHMuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzLnNsaWNlKDEpO1xufVxuZXhwb3J0cy5jYXBpdGFsaXplID0gY2FwaXRhbGl6ZTtcbmZ1bmN0aW9uIGNsYW1wKG1pbiwgdmFsdWUsIG1heCkge1xuICAgIHJldHVybiBNYXRoLm1pbihtYXgsIE1hdGgubWF4KG1pbiwgdmFsdWUpKTtcbn1cbmV4cG9ydHMuY2xhbXAgPSBjbGFtcDtcbmZ1bmN0aW9uIGRvd25sb2FkKGZpbGVuYW1lLCB0ZXh0KSB7XG4gICAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG4gICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCAnZGF0YTp0ZXh0L3BsYWluO2NoYXJzZXQ9dXRmLTgsJyArIGVuY29kZVVSSUNvbXBvbmVudCh0ZXh0KSk7XG4gICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2Rvd25sb2FkJywgZmlsZW5hbWUpO1xuICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGVsZW1lbnQpO1xuICAgIGVsZW1lbnQuY2xpY2soKTtcbiAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGVsZW1lbnQpO1xufVxuZXhwb3J0cy5kb3dubG9hZCA9IGRvd25sb2FkO1xuZnVuY3Rpb24gdXVpZHY0KCkge1xuICAgIHJldHVybiAoXCJcIiArIDFlNyArIC0xZTMgKyAtNGUzICsgLThlMyArIC0xZTExKS5yZXBsYWNlKC9bMDE4XS9nLCBmdW5jdGlvbiAoYykge1xuICAgICAgICByZXR1cm4gKE51bWJlcihjKSBeIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMobmV3IFVpbnQ4QXJyYXkoMSkpWzBdICYgMTUgPj4gTnVtYmVyKGMpIC8gNCkudG9TdHJpbmcoMTYpO1xuICAgIH0pO1xufVxuZXhwb3J0cy51dWlkdjQgPSB1dWlkdjQ7XG5mdW5jdGlvbiBzaHVmZmxlQXJyYXkoYXJyYXkpIHtcbiAgICB2YXIgX2E7XG4gICAgZm9yICh2YXIgaSA9IGFycmF5Lmxlbmd0aCAtIDE7IGkgPiAwOyBpLS0pIHtcbiAgICAgICAgdmFyIGogPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoaSArIDEpKTtcbiAgICAgICAgX2EgPSBbYXJyYXlbal0sIGFycmF5W2ldXSwgYXJyYXlbaV0gPSBfYVswXSwgYXJyYXlbal0gPSBfYVsxXTtcbiAgICB9XG59XG5leHBvcnRzLnNodWZmbGVBcnJheSA9IHNodWZmbGVBcnJheTtcbi8qKlxuICpcbiAqIEBwYXJhbSBvYmplY3RzIExpc3Qgb2Ygb2JqZWN0cyB0byBiZSBtZXJnZWQuXG4gKiBAcGFyYW0gbWVyZ2UgRnVuY3Rpb24gZGVzY3JpYmluZyBob3cgdHdvIGNvbXBhdGlibGUgb2JqZWN0cyBzaG91bGQgYmUgbWVyZ2VkXG4gKiBAcGFyYW0gbWVyZ2FibGUgRnVuY3Rpb24gcmV0dXJuaW5nIFRydWUgaWYgdHdvIG9iamVjdHMgYXJlIGNvbXBhdGlibGUgYW5kIGNhbiBiZSBtZXJnZWRcbiAqIEBwYXJhbSBpbmNsdWRlTWVyZ2UgRnVuY3Rpb24gcmV0dXJuaW5nIFRydWUgaWYgdGhlIG1lcmdlZCBvYmplY3Qgc2hvdWxkIGJlIGFjY2VwdGVkLlxuICogICAgICAgICAgICAgICAgICAgICAgSWYgRmFsc2UsIHRoZSBtZXJnZWQgb2JqZWN0IHdpbGwgbm90IGJlIGluY2x1ZGVkIGluIHRoZSByZXN1bHQuXG4gKlxuICogQHJldHVybiBMaXN0IG9mIG1lcmdlZCBvYmplY3RzLlxuICovXG5mdW5jdGlvbiBtZXJnZUFsbChvYmplY3RzLCBtZXJnZSwgbWVyZ2FibGUsIGluY2x1ZGVNZXJnZSkge1xuICAgIGlmIChpbmNsdWRlTWVyZ2UgPT09IHZvaWQgMCkgeyBpbmNsdWRlTWVyZ2UgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0cnVlOyB9OyB9XG4gICAgdmFyIG1lcmdlZCA9IFtdO1xuICAgIC8vIExvb3AgYmFja3dhcmRzIHNvIHRoYXQgd2UgY2FuIHJlbW92ZSBmcm9tIGxpc3RcbiAgICBmb3IgKHZhciBpID0gb2JqZWN0cy5sZW5ndGggLSAxOyBpID49IDA7KSB7XG4gICAgICAgIC8vIFBpY2sgdGhlIGxhc3Qgb2JqZWN0IEEgYW5kIHJlbW92ZSBpdCBmcm9tIGxpc3QuXG4gICAgICAgIHZhciBhID0gb2JqZWN0cy5zcGxpY2UoaSwgMSlbMF07XG4gICAgICAgIC8vIExvb3AgYmFja3dhcmRzIG92ZXIgYWxsIHJlbWFpbmluZyBvYmplY3RzIGFuZCBmaW5kIHRob3NlIHRoYXQgY2FuIGJlIG1lcmdlZCB0byBBXG4gICAgICAgIGZvciAodmFyIGogPSBvYmplY3RzLmxlbmd0aCAtIDE7IGogPj0gMDsgai0tKSB7XG4gICAgICAgICAgICAvLyBNZXJnZSBBIHdpdGggYWxsIG9iamVjdHMgaXQgY2FuIGJlIG1lcmdlZCB3aXRoLiBNZXJnZWQgb2JqZWN0cyBhcmUgcmVtb3ZlZCBhZnRlciBtZXJnZS5cbiAgICAgICAgICAgIGlmIChtZXJnYWJsZShhLCBvYmplY3RzW2pdKSkge1xuICAgICAgICAgICAgICAgIGEgPSBtZXJnZShhLCBvYmplY3RzLnNwbGljZShqLCAxKVswXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gRXZhbHVhdGUgbWVyZ2VkIG9iamVjdC4gSWYgaXQgaXMgYWNjZXB0ZWQsIGFkZCBpdCB0byB0aGUgcmVzdWx0LlxuICAgICAgICBpZiAoaW5jbHVkZU1lcmdlKGEpKSB7XG4gICAgICAgICAgICBtZXJnZWQucHVzaChhKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBHbyB0byB0aGUgbGFzdCBvYmplY3QgcmVtYWluaW5nIGluIGxpc3QuIFRoaXMgd2lsbCBiZSBuZXh0IEEuXG4gICAgICAgIGkgPSBvYmplY3RzLmxlbmd0aCAtIDE7XG4gICAgfVxuICAgIHJldHVybiBtZXJnZWQ7XG59XG5leHBvcnRzLm1lcmdlQWxsID0gbWVyZ2VBbGw7XG5mdW5jdGlvbiB3YWl0KG1zKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyLCBqKSB7XG4gICAgICAgIHNldFRpbWVvdXQociwgbXMpO1xuICAgIH0pO1xufVxuZXhwb3J0cy53YWl0ID0gd2FpdDtcbnZhciBjaXBoZXIgPSBuZXcganNfY2lwaGVyXzEuQ2lwaGVyKCk7XG5mdW5jdGlvbiBzaW1wbGVFbmNvZGUocykge1xuICAgIHJldHVybiBjaXBoZXIuZW5jcnlwdChzLCAzKTtcbn1cbmV4cG9ydHMuc2ltcGxlRW5jb2RlID0gc2ltcGxlRW5jb2RlO1xuZnVuY3Rpb24gc2ltcGxlRGVjb2RlKHMpIHtcbiAgICByZXR1cm4gY2lwaGVyLmRlY3J5cHQocywgMyk7XG59XG5leHBvcnRzLnNpbXBsZURlY29kZSA9IHNpbXBsZURlY29kZTtcbi8qKlxuICogU2NhbGVzIGEgbGlzdCBvZiBudW1iZXJzIHNvIHRoYXQgdGhlaXIgc3VtIGlzIDEuXG4gKiBAcGFyYW0geHNcbiAqL1xuZnVuY3Rpb24gc2NhbGVUbzEoeHMpIHtcbiAgICB2YXIgc3VtID0geHMucmVkdWNlKGZ1bmN0aW9uIChhLCBiKSB7IHJldHVybiBhICsgYjsgfSk7XG4gICAgdmFyIG5ld1hzO1xuICAgIGlmIChzdW0gIT0gMCkge1xuICAgICAgICBuZXdYcyA9IHhzLm1hcChmdW5jdGlvbiAoeCkgeyByZXR1cm4geCAvIHN1bTsgfSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBuZXdYcyA9IHhzLm1hcChmdW5jdGlvbiAoeCkgeyByZXR1cm4gMSAvIHhzLmxlbmd0aDsgfSk7XG4gICAgfVxuICAgIHJldHVybiBuZXdYcztcbn1cbmV4cG9ydHMuc2NhbGVUbzEgPSBzY2FsZVRvMTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2\n")},function(module,exports,__webpack_require__){"use strict";eval('\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.Answer = void 0;\nvar main_1 = __webpack_require__(1);\nvar serializr_1 = __webpack_require__(0);\nvar Util_1 = __webpack_require__(2);\nvar Answer = /** @class */ (function () {\n    //image\n    function Answer(id, text, description) {\n        this.id = id;\n        this.text = text;\n        this.description = description;\n    }\n    Answer.prototype.toHtml = function () {\n        var s = "<div id=\\"" + this.id + "\\" class=\\"answer\\" onselectstart=\\"return false\\">\\n            <h3>" + Util_1.capitalize(this.text) + "</h3>";\n        if (this.description) {\n            s += "<p> " + this.description + "</p>";\n        }\n        s += "</div>";\n        return s;\n    };\n    Answer.prototype.register = function () {\n        var _this = this;\n        document.getElementById(this.id).addEventListener(\'click\', function (event) {\n            main_1.state.answers[main_1.state.questions[main_1.state.currentQuestionIndex - 1].id] = _this.id;\n            main_1.nextQuestion();\n        });\n    };\n    __decorate([\n        serializr_1.serializable(serializr_1.identifier())\n    ], Answer.prototype, "id", void 0);\n    __decorate([\n        serializr_1.serializable\n    ], Answer.prototype, "text", void 0);\n    __decorate([\n        serializr_1.serializable\n    ], Answer.prototype, "description", void 0);\n    return Answer;\n}());\nexports.Answer = Answer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYW5zd2VyLnRzPzlkYTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsUUFBUTtBQUNwRDtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxhQUFhLG1CQUFPLENBQUMsQ0FBUTtBQUM3QixrQkFBa0IsbUJBQU8sQ0FBQyxDQUFXO0FBQ3JDLGFBQWEsbUJBQU8sQ0FBQyxDQUFhO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFuc3dlciA9IHZvaWQgMDtcbnZhciBtYWluXzEgPSByZXF1aXJlKFwiLi9tYWluXCIpO1xudmFyIHNlcmlhbGl6cl8xID0gcmVxdWlyZShcInNlcmlhbGl6clwiKTtcbnZhciBVdGlsXzEgPSByZXF1aXJlKFwiLi91dGlsL1V0aWxcIik7XG52YXIgQW5zd2VyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIC8vaW1hZ2VcbiAgICBmdW5jdGlvbiBBbnN3ZXIoaWQsIHRleHQsIGRlc2NyaXB0aW9uKSB7XG4gICAgICAgIHRoaXMuaWQgPSBpZDtcbiAgICAgICAgdGhpcy50ZXh0ID0gdGV4dDtcbiAgICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgIH1cbiAgICBBbnN3ZXIucHJvdG90eXBlLnRvSHRtbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHMgPSBcIjxkaXYgaWQ9XFxcIlwiICsgdGhpcy5pZCArIFwiXFxcIiBjbGFzcz1cXFwiYW5zd2VyXFxcIiBvbnNlbGVjdHN0YXJ0PVxcXCJyZXR1cm4gZmFsc2VcXFwiPlxcbiAgICAgICAgICAgIDxoMz5cIiArIFV0aWxfMS5jYXBpdGFsaXplKHRoaXMudGV4dCkgKyBcIjwvaDM+XCI7XG4gICAgICAgIGlmICh0aGlzLmRlc2NyaXB0aW9uKSB7XG4gICAgICAgICAgICBzICs9IFwiPHA+IFwiICsgdGhpcy5kZXNjcmlwdGlvbiArIFwiPC9wPlwiO1xuICAgICAgICB9XG4gICAgICAgIHMgKz0gXCI8L2Rpdj5cIjtcbiAgICAgICAgcmV0dXJuIHM7XG4gICAgfTtcbiAgICBBbnN3ZXIucHJvdG90eXBlLnJlZ2lzdGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmlkKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgbWFpbl8xLnN0YXRlLmFuc3dlcnNbbWFpbl8xLnN0YXRlLnF1ZXN0aW9uc1ttYWluXzEuc3RhdGUuY3VycmVudFF1ZXN0aW9uSW5kZXggLSAxXS5pZF0gPSBfdGhpcy5pZDtcbiAgICAgICAgICAgIG1haW5fMS5uZXh0UXVlc3Rpb24oKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgc2VyaWFsaXpyXzEuc2VyaWFsaXphYmxlKHNlcmlhbGl6cl8xLmlkZW50aWZpZXIoKSlcbiAgICBdLCBBbnN3ZXIucHJvdG90eXBlLCBcImlkXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIHNlcmlhbGl6cl8xLnNlcmlhbGl6YWJsZVxuICAgIF0sIEFuc3dlci5wcm90b3R5cGUsIFwidGV4dFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBzZXJpYWxpenJfMS5zZXJpYWxpemFibGVcbiAgICBdLCBBbnN3ZXIucHJvdG90eXBlLCBcImRlc2NyaXB0aW9uXCIsIHZvaWQgMCk7XG4gICAgcmV0dXJuIEFuc3dlcjtcbn0oKSk7XG5leHBvcnRzLkFuc3dlciA9IEFuc3dlcjtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n')},function(module,exports,__webpack_require__){eval("var api = __webpack_require__(5);\n            var content = __webpack_require__(6);\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguc2Nzcz83MjIzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyxDQUF3RTtBQUMxRiwwQkFBMEIsbUJBQU8sQ0FBQyxDQUErRjs7QUFFakk7O0FBRUE7QUFDQSwwQkFBMEIsUUFBUztBQUNuQzs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOzs7O0FBSUEiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW5kZXguc2Nzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : undefined;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n")},function(module,exports,__webpack_require__){eval('// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(7);\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.i, "@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,700);"]);\nexports.push([module.i, "@import url(https://fonts.googleapis.com/css?family=Croissant+One);"]);\nexports.push([module.i, "@import url(https://fonts.googleapis.com/css?family=Maven+Pro:500);"]);\n// Module\nexports.push([module.i, ".bimbo-personality-quiz{margin:auto;padding-top:40px;padding-bottom:40px}.bimbo-personality-quiz h1,.bimbo-personality-quiz h2,.bimbo-personality-quiz h3,.bimbo-personality-quiz h4,.bimbo-personality-quiz h5,.bimbo-personality-quiz h6{font-family:\\"Maven Pro\\",\\"Open Sans\\",\\"Helvetica Neue\\";color:#fff}.bimbo-personality-quiz h1{font-size:40px}.bimbo-personality-quiz h2{font-size:30px}.bimbo-personality-quiz h3{font-size:20px}.bimbo-personality-quiz h4{font-size:18px}.bimbo-personality-quiz *{font-family:\\"Open Sans\\",\\"Open Sans\\",\\"Helvetica Neue\\";color:#fff}.bimbo-personality-quiz .results-title{text-align:center;margin-bottom:40px}.window{background:#fff;color:#AD343E;border:1px solid #ffb600;border-radius:2px;padding:20px 20px 20px 20px;max-width:800px}.window h1,.window h2,.window h3,.window h4,.window h5,.window h6{font-family:\\"Maven Pro\\",\\"Open Sans\\",\\"Helvetica Neue\\";color:inherit;margin-top:0}.window p,.window a{font-size:14px;color:#495255}.window *{font-family:\\"Open Sans\\",\\"Open Sans\\",\\"Helvetica Neue\\"}.bimbo-cards{display:grid;grid-template-columns:repeat(auto-fit, minmax(550px, 1fr));grid-auto-rows:1fr;grid-gap:30px;max-width:1200px;margin-left:auto;margin-right:auto}.bimbo-card{display:grid;grid-template-columns:2fr 300px;grid-template-rows:1fr 50px;margin-left:auto;margin-right:auto;padding-right:0}.bimbo-card h1,.bimbo-card h2{color:#5f1c22}.bimbo-card h3{color:#252a2c}.bimbo-card p,.bimbo-card b,.bimbo-card i{font-size:14px;color:#3d4448}.bimbo-card .card-footer{grid-column:span 2;padding-right:20px}.bimbo-card .share-link{display:inline-block;margin-left:1ch;font-size:12px}.bimbo-view{width:100%;min-width:50px}.question{display:block;margin:auto}.question h3{color:#222}.answers{display:grid;grid-template-columns:repeat(auto-fit, minmax(280px, 1fr));grid-auto-rows:1fr;grid-gap:10px}.answer{background:#541A32;color:#fff;padding:20px;border-radius:4px;border:3px solid #260C1A;min-height:60px;cursor:pointer;backface-visibility:hidden;transition:background-color .2s,border .2s,color .2s,box-shadow .2s,transform .2s}.answer h1,.answer h2,.answer h3,.answer h4,.answer h5,.answer h6{text-align:center;color:inherit;margin:auto}.answer p{color:inherit}.answer:hover{background:#67203e;transform:scale(1) translateX(0px) translateY(-3px);color:#FFB600;border-color:#FFB600;box-shadow:0px 3px 2px 1px #260C1A}.retake-dialogue{margin:40px auto auto;max-width:300px;text-align:center}.retake-dialogue .answer{min-height:0}.retake-dialogue .answer h4{margin:40px 40px auto}input[type=\\"file\\"]{display:none}.loadFilesLabel{border:1px solid #ccc;display:inline-block;padding:6px 12px;cursor:pointer}.pink-button{background-color:#541A32;border-radius:2px;border:1px solid #fff;color:#fff;font-weight:bold;font-size:1.5em;padding:0.2em 1em;outline:none}.pink-button p{margin:0;display:inline;color:#a23260}.pink-button:hover{color:#FFB600;border-color:#FFB600}.pink-button:active{background-color:#411426;color:#db9d00;border-color:#b37f00}input[type=range]{-webkit-appearance:none;width:100%;margin:0.7px 0}input[type=range]:focus{outline:none}input[type=range]::-webkit-slider-runnable-track{width:100%;height:26px;cursor:pointer;box-shadow:1px 1px 1px #000000, 0 0 1px #0d0d0d;background:#541A32;border-radius:0.6px;border:0.2px solid #fff}input[type=range]::-webkit-slider-thumb{box-shadow:1px 1px 1px #000000, 0 0 1px #0d0d0d;border:1px solid #FFB600;height:30px;width:30px;border-radius:3px;background:#541A32;cursor:pointer;-webkit-appearance:none;margin-top:-3px}input[type=range]:focus::-webkit-slider-runnable-track{background:#541A32}input[type=range]::-moz-range-track{width:100%;height:26px;cursor:pointer;box-shadow:1px 1px 1px #000000, 0 0 1px #0d0d0d;background:#541A32;border-radius:0.6px;border:0.2px solid #fff}input[type=range]::-moz-range-thumb{box-shadow:1px 1px 1px #000000, 0 0 1px #0d0d0d;border:1px solid #FFB600;height:30px;width:30px;border-radius:3px;background:#541A32;cursor:pointer}input[type=range]::-ms-track{width:100%;height:26px;cursor:pointer;background:transparent;border-color:transparent;color:transparent}input[type=range]::-ms-fill-lower{background:#541A32;border:0.2px solid #fff;border-radius:1.2px;box-shadow:1px 1px 1px #000000, 0 0 1px #0d0d0d}input[type=range]::-ms-fill-upper{background:#541A32;border:0.2px solid #fff;border-radius:1.2px;box-shadow:1px 1px 1px #000000, 0 0 1px #0d0d0d}input[type=range]::-ms-thumb{box-shadow:1px 1px 1px #000000, 0 0 1px #0d0d0d;border:1px solid #FFB600;height:30px;width:30px;border-radius:3px;background:#541A32;cursor:pointer;height:26px}input[type=range]:focus::-ms-fill-lower{background:#541A32}input[type=range]:focus::-ms-fill-upper{background:#541A32}\\n", ""]);\n// Exports\nmodule.exports = exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return "@media ".concat(item[2], " {").concat(content, "}");\n      }\n\n      return content;\n    }).join(\'\');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \'string\') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \'\']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || \'\'; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === \'function\') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return "/*# sourceURL=".concat(cssMapping.sourceRoot || \'\').concat(source, " */");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\'\\n\');\n  }\n\n  return [content].join(\'\\n\');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n  return "/*# ".concat(data, " */");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzPzI0ZmIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7O0FBRWhCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDRDQUE0QyxxQkFBcUI7QUFDakU7O0FBRUE7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EscUJBQXFCLGlCQUFpQjtBQUN0QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsb0JBQW9CLHFCQUFxQjtBQUN6Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsOEJBQThCOztBQUU5Qjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBLENBQUM7OztBQUdEO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxjQUFjO0FBQ25FO0FBQ0EiLCJmaWxlIjoiNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApO1xuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICByZXR1cm4gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGNvbnRlbnQsIFwifVwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbignJyk7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSwgZGVkdXBlKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSAnc3RyaW5nJykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCAnJ11dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuXG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8ICcnKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcblxuXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICByZXR1cm4gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7\n')},function(module,exports,__webpack_require__){"use strict";eval('\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.BimboType = void 0;\nvar main_1 = __webpack_require__(1);\nvar serializr_1 = __webpack_require__(0);\nvar Util_1 = __webpack_require__(2);\nvar BimboType = /** @class */ (function () {\n    function BimboType(id, description) {\n        this.id = id;\n        this.name = id;\n        this.description = description;\n        this.prior = 1;\n        this.answerData = {};\n    }\n    /**\n     * Scales answer data so that each question is equally important in the naive bayes model.\n     * Answer data can be given as probabilities or nr of occurrences, it doesn\'t matter.\n     * Zero data will be given a small non-zero value.\n     * If data for a question is missing, it will be assumed that all remaining alternatives\n     *  are equally likely. The percentage of values missing determines how likely that group is.\n     *  Ex: 6 answers, but 2 missing. It is 1/3 that it is one of the two. Each gets 1/6.\n     *\n     * @param answerData An object where each key corresponds to a question.\n     *                      The value is a list with the occurrence of each answer.\n     */\n    BimboType.prototype.preprocessData = function (answerData) {\n        var processedData = {};\n        // For each question that was asked\n        for (var _i = 0, _a = Object.keys(main_1.state.questionsDict); _i < _a.length; _i++) {\n            var question = _a[_i];\n            // Only process answers connected to questions we have data for\n            // This removes any answers to questions we do not have data for.\n            if (question in answerData) {\n                var answers = answerData[question];\n                answers = Util_1.scaleTo1(answers);\n                // Assume missing answers are equally likely.\n                var nrOfAnswers = main_1.state.questionsDict[question].answers.length;\n                var nrOfMissing = nrOfAnswers - answers.length;\n                while (answers.length < nrOfAnswers) {\n                    answers.push(1 / (nrOfAnswers - nrOfMissing));\n                }\n                answers = Util_1.scaleTo1(answers);\n                // Add small values\n                for (var i = 0; i < answers.length; i++) {\n                    var a = answers[i];\n                    if (a == 0)\n                        answers[i] = 0.03;\n                }\n                // Scale to 1 to account for our small values\n                answers = Util_1.scaleTo1(answers);\n                processedData[question] = answers;\n            }\n        }\n        return processedData;\n    };\n    /**\n     Returns the likelihood of a given set of answers belonging to this\n     bimbo type.\n     \n     @param answers an object with one key for each question\n     the value is the index of the selected answer\n     */\n    BimboType.prototype.calcConditionalLikelihood = function (answers) {\n        var result = this.prior;\n        var data = this.preprocessData(this.answerData);\n        for (var _i = 0, _a = Object.keys(answers); _i < _a.length; _i++) {\n            var question = _a[_i];\n            // Only check answered questions against likelihoods where we have data.\n            if (question in data) {\n                result *= data[question][answers[question]];\n            }\n            else {\n                // If we do not have data for the question, assume each answer is equally likely\n                result *= 1 / main_1.state.questionsDict[question].answers.length;\n            }\n        }\n        return result;\n    };\n    /**\n     *\n     * @param answers a map with one key for each question.\n     *        the value is the index of the selected answer.\n     * @param bimboTypes\n     */\n    BimboType.calcPosterior = function (answers, bimboTypes) {\n        var evidence = 0;\n        for (var _i = 0, bimboTypes_1 = bimboTypes; _i < bimboTypes_1.length; _i++) {\n            var bimbo = bimboTypes_1[_i];\n            evidence += bimbo.calcConditionalLikelihood(answers);\n        }\n        var results = [];\n        for (var _a = 0, bimboTypes_2 = bimboTypes; _a < bimboTypes_2.length; _a++) {\n            var bimbo = bimboTypes_2[_a];\n            results.push({ bimbo: bimbo, conditional: bimbo.calcConditionalLikelihood(answers) / evidence });\n        }\n        return results;\n    };\n    /**\n     * Randomly generates answers to all questions and counts how many times each\n     * personality is chosen.\n     *\n     * @param qs a list of questions to answer\n     * @param samples how many times to answer all questions\n     * @return a list of objects representing how many times, and at how high average likelihood\n     *         each personality was chosen\n     */\n    BimboType.calcVolumeSample = function (qs, samples) {\n        var stats = {};\n        for (var _i = 0, _a = main_1.state.bimboTypes; _i < _a.length; _i++) {\n            var bimbo = _a[_i];\n            stats[bimbo.id] = { wins: 0, likelihood: 0 };\n        }\n        for (var i = 0; i < samples; i++) {\n            var answers = {};\n            for (var _b = 0, qs_1 = qs; _b < qs_1.length; _b++) {\n                var q = qs_1[_b];\n                answers[q.id] = Math.floor(Math.random() * q.answers.length);\n            }\n            var posteriors = BimboType.calcPosterior(answers, main_1.state.bimboTypes);\n            posteriors.sort(function (a, b) {\n                return b.conditional - a.conditional;\n            });\n            stats[posteriors[0].bimbo.id].wins += 1;\n            stats[posteriors[0].bimbo.id].likelihood += posteriors[0].conditional;\n        }\n        stats = Object.keys(stats).map(function (key) {\n            return { bimbo: key, wins: stats[key].wins, likelihood: stats[key].likelihood };\n        });\n        return stats;\n    };\n    BimboType.prototype.toHtml = function (likelihood) {\n        if (this.name == undefined)\n            this.name = Util_1.capitalize(this.id);\n        if (typeof likelihood == \'number\') {\n            likelihood = (likelihood * 100).toFixed(1) + "%";\n        }\n        var params = new URLSearchParams();\n        params.set("type", Util_1.simpleEncode(this.id));\n        var url = window.location.protocol + "//" + window.location.host + window.location.pathname + "?" + params;\n        var likelihoodHtml = "";\n        if (likelihood != undefined) {\n            likelihoodHtml = "\\n                <h3 style=\\"display: inline;\\">Likelihood: </h3>\\n                <p style=\\"display: inline; font-size: 1em;\\">\\n                    " + likelihood + "\\n                </p>";\n        }\n        var s = "<div class=\\"window bimbo-card\\">\\n            <div>\\n                <div>\\n                    <h2 style=\\"display: inline-block\\">The " + this.name + "</h2>\\n                </div>\\n                " + likelihoodHtml + "\\n                <p>" + this.description + "</p>\\n            </div>\\n            <img class=\\"bimbo-view\\" src=\\"" + __webpack_require__(11)("./" + this.id + ".png").default + "\\" />\\n            <div class=\\"card-footer\\">\\n                <hr>\\n                <a class=\\"share-link\\" href=\\"" + url + "\\">Link to this result</a>\\n            </div>\\n        </div>";\n        return s;\n    };\n    __decorate([\n        serializr_1.serializable(serializr_1.identifier())\n    ], BimboType.prototype, "id", void 0);\n    __decorate([\n        serializr_1.serializable\n    ], BimboType.prototype, "name", void 0);\n    __decorate([\n        serializr_1.serializable\n    ], BimboType.prototype, "description", void 0);\n    __decorate([\n        serializr_1.serializable\n    ], BimboType.prototype, "prior", void 0);\n    __decorate([\n        serializr_1.serializable(serializr_1.map(serializr_1.list(serializr_1.primitive())))\n    ], BimboType.prototype, "answerData", void 0);\n    return BimboType;\n}());\nexports.BimboType = BimboType;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar alphabet_json_1 = __webpack_require__(10);\r\nvar Cipher = /** @class */ (function () {\r\n    function Cipher() {\r\n        this.alphabet = alphabet_json_1.en;\r\n        this.characters = [];\r\n        this.defaultRegex = /([a-z])|(\\+)|[^A-Za-z]/gi;\r\n        this.nonAlphabetChars = /[^A-Za-z|+]+/g;\r\n    }\r\n    Cipher.prototype.getCharacterPositions = function (text) {\r\n        var _this = this;\r\n        this.characters = this.destructureText(text);\r\n        var characterPositions = [];\r\n        this.characters.map(function (character) {\r\n            _this.alphabet.map(function (c, i) {\r\n                if (character === c[0]) {\r\n                    characterPositions = __spreadArrays(characterPositions, [{ position: i, index: 0 }]);\r\n                }\r\n                else if (character === c[1]) {\r\n                    characterPositions = __spreadArrays(characterPositions, [{ position: i, index: 1 }]);\r\n                }\r\n                else if (character === "+" && characterPositions[characterPositions.length - 1] !== "+") {\r\n                    characterPositions = __spreadArrays(characterPositions, [character]);\r\n                }\r\n                else if (_this.nonAlphabetChars.test(character)) {\r\n                    characterPositions = __spreadArrays(characterPositions, [character]);\r\n                    character = undefined;\r\n                }\r\n            });\r\n        });\r\n        return characterPositions;\r\n    };\r\n    Cipher.prototype.alteredString = function (charPositions, shiftLength, positiveShift) {\r\n        var _this = this;\r\n        var remainderLength;\r\n        var newString = "";\r\n        if (positiveShift) {\r\n            charPositions.map(function (char) {\r\n                if (char === "+") {\r\n                    newString = newString + " ";\r\n                }\r\n                else if (char.position + shiftLength > _this.alphabet.length - 1) {\r\n                    remainderLength = char.position + shiftLength - _this.alphabet.length;\r\n                    newString = newString + _this.alphabet[remainderLength][char.index];\r\n                }\r\n                else if (typeof char === "string" && char.match(_this.nonAlphabetChars)) {\r\n                    newString = newString + char;\r\n                }\r\n                else {\r\n                    newString = newString + _this.alphabet[char.position + shiftLength][char.index];\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            charPositions.map(function (char) {\r\n                if (char === "+") {\r\n                    newString = newString + " ";\r\n                }\r\n                else if (char.position - shiftLength < 0) {\r\n                    remainderLength = char.position - shiftLength + _this.alphabet.length;\r\n                    newString = newString + _this.alphabet[remainderLength][char.index];\r\n                }\r\n                else if (typeof char === "string" && char.match(_this.nonAlphabetChars)) {\r\n                    newString = newString + char;\r\n                }\r\n                else {\r\n                    newString = newString + _this.alphabet[char.position - shiftLength][char.index];\r\n                }\r\n            });\r\n        }\r\n        return newString;\r\n    };\r\n    Cipher.prototype.destructureText = function (text) {\r\n        var newText = text.replace(/\\s+/g, "+");\r\n        var destructuredText = newText.match(this.defaultRegex);\r\n        return destructuredText;\r\n    };\r\n    Cipher.prototype.validateParameters = function (text, shiftLength) {\r\n        if (!text) {\r\n            throw new Error("Text is required.");\r\n        }\r\n        if (typeof text !== "string") {\r\n            throw new Error("Text should be a string.");\r\n        }\r\n        if (typeof shiftLength !== "number") {\r\n            throw new Error("Shift length should be a number.");\r\n        }\r\n        if (!shiftLength && shiftLength !== 0) {\r\n            throw new Error("Shift length is required.");\r\n        }\r\n        if (shiftLength <= 0 || shiftLength > this.alphabet.length) {\r\n            throw new Error("Shift length should be between : 1-" + this.alphabet.length + ".");\r\n        }\r\n    };\r\n    Cipher.prototype.encrypt = function (text, shiftLength) {\r\n        try {\r\n            this.validateParameters(text, shiftLength);\r\n            var charPositions = this.getCharacterPositions(text);\r\n            return this.alteredString(charPositions, shiftLength, true);\r\n        }\r\n        catch (err) {\r\n            throw new Error("Unable to encrypt message. " + err.message);\r\n        }\r\n    };\r\n    Cipher.prototype.decrypt = function (text, shiftLength) {\r\n        try {\r\n            this.validateParameters(text, shiftLength);\r\n            var charPositions = this.getCharacterPositions(text);\r\n            return this.alteredString(charPositions, shiftLength, false);\r\n        }\r\n        catch (err) {\r\n            throw new Error("Unable to decrypt message. " + err.message);\r\n        }\r\n    };\r\n    return Cipher;\r\n}());\r\nexports.Cipher = Cipher;\r\n;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9\n')},function(module){eval('module.exports = JSON.parse("{\\"en\\":[[\\"a\\",\\"A\\"],[\\"b\\",\\"B\\"],[\\"c\\",\\"C\\"],[\\"d\\",\\"D\\"],[\\"e\\",\\"E\\"],[\\"f\\",\\"F\\"],[\\"g\\",\\"G\\"],[\\"h\\",\\"H\\"],[\\"i\\",\\"I\\"],[\\"j\\",\\"J\\"],[\\"k\\",\\"K\\"],[\\"l\\",\\"L\\"],[\\"m\\",\\"M\\"],[\\"n\\",\\"N\\"],[\\"o\\",\\"O\\"],[\\"p\\",\\"P\\"],[\\"q\\",\\"Q\\"],[\\"r\\",\\"R\\"],[\\"s\\",\\"S\\"],[\\"t\\",\\"T\\"],[\\"u\\",\\"U\\"],[\\"v\\",\\"V\\"],[\\"w\\",\\"W\\"],[\\"x\\",\\"X\\"],[\\"y\\",\\"Y\\"],[\\"z\\",\\"Z\\"]]}");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIxMC5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///10\n')},function(module,exports,__webpack_require__){eval('var map = {\n\t"./besserwisser.png": 12,\n\t"./cheerleader.png": 13,\n\t"./cow.png": 14,\n\t"./ditz.png": 15,\n\t"./diva.png": 16,\n\t"./gamer.png": 17,\n\t"./goth.png": 18,\n\t"./gym-bunny.png": 19,\n\t"./know-it-all.png": 20,\n\t"./librarian.png": 21,\n\t"./pet.png": 22,\n\t"./queen.png": 23,\n\t"./shopaholic.png": 24,\n\t"./slut.png": 25\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error("Cannot find module \'" + req + "\'");\n\t\te.code = \'MODULE_NOT_FOUND\';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 11;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzIHN5bmMgXlxcLlxcLy4qXFwucG5nJD83ZTg1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbWFwID0ge1xuXHRcIi4vYmVzc2Vyd2lzc2VyLnBuZ1wiOiAxMixcblx0XCIuL2NoZWVybGVhZGVyLnBuZ1wiOiAxMyxcblx0XCIuL2Nvdy5wbmdcIjogMTQsXG5cdFwiLi9kaXR6LnBuZ1wiOiAxNSxcblx0XCIuL2RpdmEucG5nXCI6IDE2LFxuXHRcIi4vZ2FtZXIucG5nXCI6IDE3LFxuXHRcIi4vZ290aC5wbmdcIjogMTgsXG5cdFwiLi9neW0tYnVubnkucG5nXCI6IDE5LFxuXHRcIi4va25vdy1pdC1hbGwucG5nXCI6IDIwLFxuXHRcIi4vbGlicmFyaWFuLnBuZ1wiOiAyMSxcblx0XCIuL3BldC5wbmdcIjogMjIsXG5cdFwiLi9xdWVlbi5wbmdcIjogMjMsXG5cdFwiLi9zaG9wYWhvbGljLnBuZ1wiOiAyNCxcblx0XCIuL3NsdXQucG5nXCI6IDI1XG59O1xuXG5cbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0KHJlcSkge1xuXHR2YXIgaWQgPSB3ZWJwYWNrQ29udGV4dFJlc29sdmUocmVxKTtcblx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oaWQpO1xufVxuZnVuY3Rpb24gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSkge1xuXHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKG1hcCwgcmVxKSkge1xuXHRcdHZhciBlID0gbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIiArIHJlcSArIFwiJ1wiKTtcblx0XHRlLmNvZGUgPSAnTU9EVUxFX05PVF9GT1VORCc7XG5cdFx0dGhyb3cgZTtcblx0fVxuXHRyZXR1cm4gbWFwW3JlcV07XG59XG53ZWJwYWNrQ29udGV4dC5rZXlzID0gZnVuY3Rpb24gd2VicGFja0NvbnRleHRLZXlzKCkge1xuXHRyZXR1cm4gT2JqZWN0LmtleXMobWFwKTtcbn07XG53ZWJwYWNrQ29udGV4dC5yZXNvbHZlID0gd2VicGFja0NvbnRleHRSZXNvbHZlO1xubW9kdWxlLmV4cG9ydHMgPSB3ZWJwYWNrQ29udGV4dDtcbndlYnBhY2tDb250ZXh0LmlkID0gMTE7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///11\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "besserwisser.png");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL2Jlc3Nlcndpc3Nlci5wbmc/NWQ5NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFlLG9GQUF1QixxQkFBcUIiLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYmVzc2Vyd2lzc2VyLnBuZ1wiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///12\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "cheerleader.png");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL2NoZWVybGVhZGVyLnBuZz8xZDA3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQWUsb0ZBQXVCLG9CQUFvQiIsImZpbGUiOiIxMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJjaGVlcmxlYWRlci5wbmdcIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///13\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "cow.png");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL2Nvdy5wbmc/MjMxNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFlLG9GQUF1QixZQUFZIiwiZmlsZSI6IjE0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImNvdy5wbmdcIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///14\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "ditz.png");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL2RpdHoucG5nP2VlZDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBZSxvRkFBdUIsYUFBYSIsImZpbGUiOiIxNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJkaXR6LnBuZ1wiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///15\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "diva.png");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL2RpdmEucG5nPzRlZDciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBZSxvRkFBdUIsYUFBYSIsImZpbGUiOiIxNi5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJkaXZhLnBuZ1wiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///16\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "gamer.png");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL2dhbWVyLnBuZz9hNjczIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQWUsb0ZBQXVCLGNBQWMiLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZ2FtZXIucG5nXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///17\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "goth.png");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL2dvdGgucG5nP2RhYmUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBZSxvRkFBdUIsYUFBYSIsImZpbGUiOiIxOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJnb3RoLnBuZ1wiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///18\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "gym-bunny.png");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL2d5bS1idW5ueS5wbmc/Yjg3MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFlLG9GQUF1QixrQkFBa0IiLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZ3ltLWJ1bm55LnBuZ1wiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///19\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "know-it-all.png");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL2tub3ctaXQtYWxsLnBuZz81MThmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQWUsb0ZBQXVCLG9CQUFvQiIsImZpbGUiOiIyMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJrbm93LWl0LWFsbC5wbmdcIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///20\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "librarian.png");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL2xpYnJhcmlhbi5wbmc/NzY5NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFlLG9GQUF1QixrQkFBa0IiLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwibGlicmFyaWFuLnBuZ1wiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///21\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "pet.png");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL3BldC5wbmc/Y2U4NSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFlLG9GQUF1QixZQUFZIiwiZmlsZSI6IjIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcInBldC5wbmdcIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///22\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "queen.png");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL3F1ZWVuLnBuZz84MDg3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQWUsb0ZBQXVCLGNBQWMiLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwicXVlZW4ucG5nXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///23\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "shopaholic.png");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL3Nob3BhaG9saWMucG5nPzViNmUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBZSxvRkFBdUIsbUJBQW1CIiwiZmlsZSI6IjI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcInNob3BhaG9saWMucG5nXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///24\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "slut.png");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL3NsdXQucG5nP2ZiYjEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBZSxvRkFBdUIsYUFBYSIsImZpbGUiOiIyNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJzbHV0LnBuZ1wiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///25\n')},function(module,exports,__webpack_require__){"use strict";eval('\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.Question = void 0;\nvar answer_1 = __webpack_require__(3);\nvar serializr_1 = __webpack_require__(0);\nvar Question = /** @class */ (function () {\n    function Question(id, text, answers) {\n        this.id = id;\n        this.text = text;\n        this.answers = answers; //answers.map((a, i) => new Answer(`${i}`, a))\n    }\n    Question.prototype.toHtml = function () {\n        var s = "\\n        <div class=\\"window question\\" id=\\"question\\">\\n            <h3>" + this.text + "</h3>\\n            <br>\\n            <div class=\\"answers\\">\\n                " + this.answers.map(function (a) { return a.toHtml(); }).join(\'\') + "\\n            </div>\\n        </div>\\n      ";\n        return s;\n    };\n    Question.prototype.register = function () {\n        for (var _i = 0, _a = this.answers; _i < _a.length; _i++) {\n            var answer = _a[_i];\n            answer.register();\n        }\n    };\n    __decorate([\n        serializr_1.serializable(serializr_1.identifier())\n    ], Question.prototype, "id", void 0);\n    __decorate([\n        serializr_1.serializable\n    ], Question.prototype, "text", void 0);\n    __decorate([\n        serializr_1.serializable(serializr_1.list(serializr_1.object(answer_1.Answer)))\n    ], Question.prototype, "answers", void 0);\n    return Question;\n}());\nexports.Question = Question;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcXVlc3Rpb24udHM/ZDg3OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxRQUFRO0FBQ3BEO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxDQUFVO0FBQ2pDLGtCQUFrQixtQkFBTyxDQUFDLENBQVc7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsdUNBQXVDLEVBQUU7QUFDeEU7QUFDQTtBQUNBLDhOQUE4TixtQkFBbUIsRUFBRTtBQUNuUDtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsZ0JBQWdCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJmaWxlIjoiMjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2RlY29yYXRlID0gKHRoaXMgJiYgdGhpcy5fX2RlY29yYXRlKSB8fCBmdW5jdGlvbiAoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSA9PT0gXCJmdW5jdGlvblwiKSByID0gUmVmbGVjdC5kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYyk7XG4gICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUXVlc3Rpb24gPSB2b2lkIDA7XG52YXIgYW5zd2VyXzEgPSByZXF1aXJlKFwiLi9hbnN3ZXJcIik7XG52YXIgc2VyaWFsaXpyXzEgPSByZXF1aXJlKFwic2VyaWFsaXpyXCIpO1xudmFyIFF1ZXN0aW9uID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFF1ZXN0aW9uKGlkLCB0ZXh0LCBhbnN3ZXJzKSB7XG4gICAgICAgIHRoaXMuaWQgPSBpZDtcbiAgICAgICAgdGhpcy50ZXh0ID0gdGV4dDtcbiAgICAgICAgdGhpcy5hbnN3ZXJzID0gYW5zd2VyczsgLy9hbnN3ZXJzLm1hcCgoYSwgaSkgPT4gbmV3IEFuc3dlcihgJHtpfWAsIGEpKVxuICAgIH1cbiAgICBRdWVzdGlvbi5wcm90b3R5cGUudG9IdG1sID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgcyA9IFwiXFxuICAgICAgICA8ZGl2IGNsYXNzPVxcXCJ3aW5kb3cgcXVlc3Rpb25cXFwiIGlkPVxcXCJxdWVzdGlvblxcXCI+XFxuICAgICAgICAgICAgPGgzPlwiICsgdGhpcy50ZXh0ICsgXCI8L2gzPlxcbiAgICAgICAgICAgIDxicj5cXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJhbnN3ZXJzXFxcIj5cXG4gICAgICAgICAgICAgICAgXCIgKyB0aGlzLmFuc3dlcnMubWFwKGZ1bmN0aW9uIChhKSB7IHJldHVybiBhLnRvSHRtbCgpOyB9KS5qb2luKCcnKSArIFwiXFxuICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICA8L2Rpdj5cXG4gICAgICBcIjtcbiAgICAgICAgcmV0dXJuIHM7XG4gICAgfTtcbiAgICBRdWVzdGlvbi5wcm90b3R5cGUucmVnaXN0ZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZvciAodmFyIF9pID0gMCwgX2EgPSB0aGlzLmFuc3dlcnM7IF9pIDwgX2EubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICB2YXIgYW5zd2VyID0gX2FbX2ldO1xuICAgICAgICAgICAgYW5zd2VyLnJlZ2lzdGVyKCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBzZXJpYWxpenJfMS5zZXJpYWxpemFibGUoc2VyaWFsaXpyXzEuaWRlbnRpZmllcigpKVxuICAgIF0sIFF1ZXN0aW9uLnByb3RvdHlwZSwgXCJpZFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBzZXJpYWxpenJfMS5zZXJpYWxpemFibGVcbiAgICBdLCBRdWVzdGlvbi5wcm90b3R5cGUsIFwidGV4dFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBzZXJpYWxpenJfMS5zZXJpYWxpemFibGUoc2VyaWFsaXpyXzEubGlzdChzZXJpYWxpenJfMS5vYmplY3QoYW5zd2VyXzEuQW5zd2VyKSkpXG4gICAgXSwgUXVlc3Rpb24ucHJvdG90eXBlLCBcImFuc3dlcnNcIiwgdm9pZCAwKTtcbiAgICByZXR1cm4gUXVlc3Rpb247XG59KCkpO1xuZXhwb3J0cy5RdWVzdGlvbiA9IFF1ZXN0aW9uO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///26\n')},function(module){eval('module.exports = JSON.parse("[{\\"id\\":\\"ditz\\",\\"description\\":\\"All bimbos have one thing in common: being dumb. But you have managed to make that your entire personality. Giggling, drooling and with an attention span that make would make a goldfish ashamed, you\'re in luck when you can figure out how a doorknob works. <br><br> You are playful and may need someone to keep you in line, yet submissiveness comes naturally to you. You\'ll do whatever you\'re told, because you can\'t really remember what you were planning to do anyway.\\",\\"prior\\":0.8,\\"answerData\\":{\\"color\\":[10,8,6,2,0,4,1,4],\\"drive\\":[10,6,2,1],\\"being-told\\":[3,10,1,0],\\"animal\\":[7,2,7,10],\\"partner\\":[10,1,6,8],\\"breast-expansion\\":[0,10,10,10],\\"shoes\\":[1,2,0,10,4],\\"describe\\":[5,0,1,10,10,3],\\"iq\\":[10,4,2,0,0,0,0],\\"hair-color\\":[10,6,2,0,6,0],\\"breast-size\\":[0,1,8,10,6],\\"lactation\\":[5,7,4,1],\\"relax\\":[5,5,5,0,5],\\"selfie\\":[2,1,0],\\"brain-drain\\":[0,3,0,6,0,0]}},{\\"id\\":\\"slut\\",\\"description\\":\\"It\'s not that you\'re trying to get in bed with half the people you meet, it\'s just that having sex is so freakin\' good! And where most people tire after going at it once or twice in a row, you just can\'t help yourself. Everyone you meet looks sooo hot, so how couldn\'t you be horny all the time? <br><br> Some think you could never be in a real relationship, but that\'s not true. Maybe your partner can only do you two times in a row, but then you can just find someone else in the meantime. You don\'t mind. Whenever your partner is up for a fuck you\'ll be there, so they surely won\'t mind if you suck some dick in the meantime?\\",\\"prior\\":0.5,\\"answerData\\":{\\"color\\":[9,9,10,0,0,3,1,6],\\"drive\\":[5,5,5,5],\\"being-told\\":[10,7,3,0],\\"animal\\":[0,5,10,1],\\"partner\\":[10,0,2,7],\\"breast-expansion\\":[1,10,5,2],\\"shoes\\":[1,1,2,10,10],\\"describe\\":[3,1,5,5,7,10],\\"iq\\":[1,4,10,6,4,5,5],\\"hair-color\\":[8,9,4,3,6,5],\\"breast-size\\":[6,3,10,5,1],\\"lactation\\":[5,4,1,0],\\"relax\\":[2,2,1,0,10],\\"selfie\\":[1,1,2],\\"brain-drain\\":[3,3,3,1,3,0]}},{\\"id\\":\\"diva\\",\\"description\\":\\"You\'re beautiful, sexy and stylish. And you know it. Staff may call you arrogant and egocentric, but they are just too close-minded to appreciate your elegance. You want nothing but the service and luxury you are entitled to. <br><br> As most bimbos you leave all the hard thinking and maths to others, yet you are a master of making people give you what you want. Be it with charm, sex or threats; the intelligent think you understand them, the rich are allured by you and the poor dread you. <br><br> At the end of the day, you\'re the one sitting naked in a big luxury bubble bath in the lap of some millionaire, drinking champagne and enjoying yourself.\\",\\"prior\\":1.2,\\"answerData\\":{\\"color\\":[5,7,5,2,2,7,5,2],\\"drive\\":[0,10,6,6],\\"being-told\\":[0,0,5,10],\\"animal\\":[0,10,1,5],\\"partner\\":[5,1,10,5],\\"breast-expansion\\":[6,10,4,4],\\"shoes\\":[0,1,7,3,10],\\"describe\\":[0,5,4,0,10,10],\\"iq\\":[0,1,2,3,10,6,4],\\"hair-color\\":[1,6,6,1,2,10],\\"breast-size\\":[1,8,8,6,2],\\"lactation\\":[10,3,1,0],\\"relax\\":[10,7,0,2,0],\\"selfie\\":[1,2,0],\\"brain-drain\\":[0,0,3,2,6,0]}},{\\"id\\":\\"pet\\",\\"description\\":\\"Shy and affectionate, you crave attention more than any other. Head pats, belly rubs and cuddle fucking means everything to you, and you will do anything to get it. <br><br> You may prefer to sit at home snuggled up in your owners lap, but if they want you to crawl naked and leashed through the streets, you\'ll do it, tongue out and head up. You don\'t want anyone to doubt what a good girl you are.\\",\\"prior\\":1,\\"answerData\\":{\\"color\\":[7,1,4,10,7,3,1,5],\\"drive\\":[5,10,2,0],\\"being-told\\":[10,3,0,2],\\"animal\\":[10,5,10,10],\\"partner\\":[4,10,0,6],\\"breast-expansion\\":[5,0,0,7],\\"shoes\\":[10,2,1,5,0],\\"describe\\":[10,3,10,7,1,3],\\"iq\\":[1,3,6,7,3,3,3],\\"hair-color\\":[1,2,5,5,7,4],\\"breast-size\\":[10,7,4,1,0],\\"lactation\\":[10,6,3,1],\\"relax\\":[2,5,0,10,2],\\"selfie\\":[0,0,2],\\"brain-drain\\":[1,0,3,3,6,1]}},{\\"id\\":\\"shopaholic\\",\\"description\\":\\"You love shopping. The big malls have everything, from cute cafés to all those little boutiques that sell cute dresses, earrings, shoes, sexy panties... you could go on, and you usually do, until you\'re all out of spending money. <br><br> At least you got the style sense to back it up. Always in a new meticulously planned outfit, just a tad too revealing to be appropriate, you rarely have trouble finding someone to pay for it all. And hey it\'s a fair trade, you get to do what you enjoy, and they get to have you model it for them in just as much privacy as they want.\\",\\"prior\\":1,\\"answerData\\":{\\"color\\":[6,4,4,5,5,4,4,3],\\"drive\\":[1,4,8,3],\\"being-told\\":[3,0,10,7],\\"animal\\":[1,5,5,3],\\"partner\\":[3,1,10,6],\\"breast-expansion\\":[1,5,5,1],\\"shoes\\":[0,3,2,4,5],\\"describe\\":[4,2,1,2,10,5],\\"iq\\":[0,1,3,9,7,3,3],\\"hair-color\\":[7,7,5,2,4,1],\\"breast-size\\":[1,8,10,5,0],\\"lactation\\":[10,2,0,0],\\"relax\\":[4,10,7,1,1],\\"selfie\\":[2,0,0],\\"brain-drain\\":[6,3,0,1,1,6]}},{\\"id\\":\\"librarian\\",\\"description\\":\\"As one of the smartest bimbo types, you very likely retain your ability to read and write. But with a positive view of bimbos, it would not be uncommon for you to want to become dumber. Several of the Librarian type have managed to dumb down to a primary-school level of reading and writing ability, but more common is to find a middle ground at a vocabulary limited to what one might find in erotic novels. <br><br> Your reserved nature often comes between you and acting out your fantasies. This tends to result in fairly discreet behavior such as bending over too far to \'pick up a book\', sucking on the edge of a pen, getting lewd tatoos or bringing \'toys\' to work for when you don\'t think anyone will notice. <br><br> But in the struggle to be more bimbo, always remember how cute it is to be both sexy, horny <i>AND</i> smart(-isch)!\\",\\"prior\\":1,\\"answerData\\":{\\"color\\":[5,1,3,5,1,1,3,5],\\"drive\\":[0,4,8,1],\\"being-told\\":[10,5,0,3],\\"animal\\":[2,2,5,5],\\"partner\\":[5,5,1,10],\\"breast-expansion\\":[10,6,2,4],\\"shoes\\":[2,0,10,5,1],\\"describe\\":[6,7,8,1,0,1],\\"iq\\":[0,0,2,4,8,10,5],\\"hair-color\\":[0,2,10,10,2,4],\\"breast-size\\":[8,10,5,1,0],\\"lactation\\":[10,5,1,1],\\"relax\\":[2,1,0,10,7],\\"selfie\\":[1,2,0],\\"brain-drain\\":[1,6,3,0,3,1]}},{\\"id\\":\\"cow\\",\\"description\\":\\"Closely related to the Pet bimbo type, you are both shy and affectionate. You love being petted and cared for, but also when big strong arms can wrap around your waist, or big heavy hips, and hold you steady. <br><br> As one of the dumbest bimbo types, many Cows are too stupid (but sometimes just too submissive) to even open doors or speak, but usually retain a high level of emotional intelligence. This means that you can easily sense, especially your handler\'s, mood and make them feel better in almost any situation. This often leads to a deep bond between you and your handler. <br><br> This bond is taken even further by your own favourite pastime: being milked. You absolutely love it! Whether you get to feel your handlers firm but gentle hands, stroking and squeezing your breasts and nipples, or strong arms around your waist as you are rammed from behind, while a machine does the milking... you cum every time, many times.\\",\\"prior\\":1,\\"answerData\\":{\\"color\\":[5,1,3,8,1,5,10,10],\\"drive\\":[10,3,1,1],\\"being-told\\":[10,7,0,0],\\"animal\\":[5,0,5,10],\\"partner\\":[4,10,0,10],\\"breast-expansion\\":[0,0,0,10],\\"shoes\\":[10,2,3,4,3],\\"describe\\":[10,1,8,2,1,0],\\"iq\\":[10,5,3,1,1,0,0],\\"hair-color\\":[1,7,7,10,2,10],\\"breast-size\\":[0,1,3,9,10],\\"lactation\\":[0,1,5,10],\\"relax\\":[3,10,0,7,5],\\"selfie\\":[0,0,1],\\"brain-drain\\":[0,0,0,0,6,3]}},{\\"id\\":\\"cheerleader\\",\\"description\\":\\"Cheery and energetic, you work hard to be the best! This trait means that while Cheerleader types are usually drawn to dancing, sports or similar activities where you can show off and be the center of attention, if you happen to be one of the less ditzy ones, you might do quite well in any field you choose. Dedication, good looks and a cutthroat attitude towards competition often goes a long way. <br><br> Of course, you may well be more of an airhead kind of gal. In which case you are more than likely to need all that energy of yours to memorize your next chant. Spelling to \'go team\' and counting to 10 can be tricky!\\",\\"prior\\":1,\\"answerData\\":{\\"color\\":[10,1,7,1,5,5,1,10],\\"drive\\":[2,7,10,6],\\"being-told\\":[4,1,10,7],\\"animal\\":[0,7,10,1],\\"partner\\":[4,1,4,10],\\"breast-expansion\\":[2,5,5,1],\\"shoes\\":[5,6,10,1,3],\\"describe\\":[1,5,0,5,10,7],\\"iq\\":[0,5,10,7,3,1,0],\\"hair-color\\":[7,10,1,5,1,0],\\"breast-size\\":[4,10,8,1,0],\\"lactation\\":[10,3,1,0],\\"relax\\":[6,1,10,0,2],\\"selfie\\":[1,2,0],\\"brain-drain\\":[0,0,3,6,3,3]}},{\\"id\\":\\"goth\\",\\"description\\":\\"Enigmatic, reserved and difficult to impress, on the surface you are the polar opposite of most other bimbo types. But the reason you look so bored is just that you\'ve already had all the normal sex! You may be a bimbo, but at least you can remember that... <br><br> What you want is something new and exciting! It doesn\'t matter if that is engaging in a deeply romantic relationship, reading poems and gazing into each others eyes throughout the night, or uncovering ancient occult rituals for summoning succubi and other hot looking demons. If you get to do something different, and end the night screaming in pleasure, you\'ll be perfectly happy.\\",\\"prior\\":1,\\"answerData\\":{\\"color\\":[0,3,5,1,4,0,10,0],\\"drive\\":[5,1,4,5],\\"being-told\\":[1,10,10,5],\\"animal\\":[5,7,0,10],\\"partner\\":[10,9,1,3],\\"breast-expansion\\":[3,5,5,5],\\"shoes\\":[0,0,7,4,10],\\"describe\\":[5,5,10,3,1,3],\\"iq\\":[0,3,7,10,7,1,0],\\"hair-color\\":[0,0,0,5,1,10],\\"breast-size\\":[4,10,7,1,0],\\"lactation\\":[10,3,1,0],\\"relax\\":[6,0,4,10,0],\\"selfie\\":[0,1,1],\\"brain-drain\\":[1,6,3,0,1,3]}},{\\"id\\":\\"gamer\\",\\"description\\":\\"People go online for many reasons, but you\'re here for two things: to have fun, and to win! Other bimbo types might obsess over shopping and shoes, but your passion is gaming, and you\'re damn good at it. No matter what game or platform, few can match you. <br><br> And there are so many games to choose from! So many characters to build or play as. The blushing healer, the horny tank, or just kicking some ass with a big fat gun. <br><br> Thanks to streaming, you can even make money while doing it. Show off your skills, meet cool people, flirt with chat and why not show off some of your other assets at the same time? It\'s all the fun you want in a single package. Well, almost all you want ;)\\",\\"prior\\":0.4,\\"answerData\\":{\\"color\\":[10,6,6,2,2,1,8,1],\\"drive\\":[0,1,10,8],\\"being-told\\":[4,6,10,8],\\"animal\\":[8,10,4,8],\\"partner\\":[2,6,4,10],\\"breast-expansion\\":[7,7,2,4],\\"shoes\\":[6,6,10,1,6],\\"describe\\":[4,6,1,10,2,8],\\"iq\\":[0,0,2,6,10,7,1],\\"hair-color\\":[0,0,4,4,10,2],\\"breast-size\\":[2,6,8,4,0],\\"lactation\\":[6,4,1,2],\\"relax\\":[6,3,0,10,3],\\"selfie\\":[10,5,0],\\"brain-drain\\":[0,3,0,6,0,3]}},{\\"id\\":\\"queen\\",\\"description\\":\\"Noble and beautiful, few would complain having you be their queen. You may be too dumb to really rule much more than your bedroom, yet your calm demeanour, soothing voice and royal posture make everything you say seem wise nonetheless. <br><br> With a penchant for silk and other luxury materials, you\'re always dressed to match your status. Fancy dresses, frills and glimmering jewelry are no news to you, all with a tasteful slutty touch. <br><br> Rulers can be cruel and dominating, or tender and encouraging, but whichever you are, you\'re certain to find those who will praise and love you. Or fight to defend your honor.\\",\\"prior\\":0.7,\\"answerData\\":{\\"color\\":[1,8,4,0,10,6,0,1],\\"drive\\":[10,4,1,0],\\"being-told\\":[4,2,0,10],\\"animal\\":[7,4,1,10],\\"partner\\":[4,10,1,5],\\"breast-expansion\\":[8,2,4,6],\\"shoes\\":[0,0,8,2,3],\\"describe\\":[10,2,4,1,8,2],\\"iq\\":[0,4,8,6,2,1,0],\\"hair-color\\":[6,3,1,4,0,10],\\"breast-size\\":[1,2,6,4,2],\\"lactation\\":[10,4,2,2],\\"relax\\":[10,8,2,5,0],\\"selfie\\":[2,10,4],\\"brain-drain\\":[0,0,6,0,2,1]}},{\\"id\\":\\"gym-bunny\\",\\"name\\":\\"Gym Bunny\\",\\"description\\":\\"<i>Gym bunny.</i> When it comes to staying fit, no one is more dedicated than you. Whether at the gym, rock climbing or running marathons, finding you not doing some physical activity is a rare sight. And why not? You stay healthy, horny and energized, not to mention, there are always plenty of hot guys around. <br><br> <i>Dim bunny.</i> When it comes to intelligence, you\'re certainly on the lower end, but that\'s exactly what you want! Your brain doesn\'t help you stay fit, and who would like a smartsy bimbo anyway? Staying fit and dumb really is the best. <br><br> <i>Cum bunny.</i> With your stamina, there are not many who can keep up. Yet with your looks, building a team to help send you on your way really isn\'t that difficult. \\",\\"prior\\":1.5,\\"answerData\\":{\\"color\\":[10,4,8,1,4,4,2,6],\\"drive\\":[4,0,6,10],\\"being-told\\":[7,10,3,0],\\"animal\\":[4,10,10,0],\\"partner\\":[6,0,0,10],\\"breast-expansion\\":[10,2,6,2],\\"shoes\\":[6,6,10,1,3],\\"describe\\":[4,0,4,2,10,10],\\"iq\\":[3,10,6,3,1,0,0],\\"hair-color\\":[1,10,3,6,1,2],\\"breast-size\\":[4,10,4,0,0],\\"lactation\\":[10,4,1,0],\\"relax\\":[0,0,10,0,4],\\"selfie\\":[10,2,0],\\"brain-drain\\":[0,0,0,6,1,3]}},{\\"id\\":\\"know-it-all\\",\\"name\\":\\"Know-It-All\\",\\"description\\":\\"A bimbo? You?! No way, you\'re like way too int... intli... uuh... smartsy, yeah. You know that you\'re always right, and you won\'t let anyone tell you otherwise. <br><br> You may have been pretty smart once, but whether you were hit by a too sudden and powerful brain drain, or you were always both this dumb and intolerable, you don\'t have many IQ points left, but you sure think you do. You\'ll often interrupt to correct someone, only to say something unfathomably stupid, or forget what you were saying mid-sentence. <br><br> But don\'t worry, while people can find you rude at first, it\'s quick to realize that you just don\'t know better. You\'ll get a little pat on the head, and while that might infuriate you, your memory is so shot you will soon have forgotten about it. And if not, a little quickie or helping you turn on your vibrator will have you happily drooling and squirming on the floor in no time.\\",\\"prior\\":1,\\"answerData\\":{\\"color\\":[6,3,6,8,6,3,4,4],\\"drive\\":[2,5,3,1],\\"being-told\\":[0,0,10,6],\\"animal\\":[10,7,2,2],\\"partner\\":[5,3,1,6],\\"breast-expansion\\":[10,2,2,5],\\"shoes\\":[1,4,10,2,1],\\"describe\\":[2,10,4,0,0,2],\\"iq\\":[0,0,0,1,3,6,10],\\"hair-color\\":[0,5,6,10,0,6],\\"breast-size\\":[4,8,2,0,0],\\"lactation\\":[10,2,0,0],\\"relax\\":[8,6,3,10,4],\\"selfie\\":[1,4,4],\\"brain-drain\\":[6,0,0,0,1,6]}}]");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIyNy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///27\n')},function(module){eval('module.exports = JSON.parse("[{\\"id\\":\\"color\\",\\"text\\":\\"What is your favorite color?\\",\\"answers\\":[{\\"id\\":\\"0\\",\\"text\\":\\"pink\\"},{\\"id\\":\\"1\\",\\"text\\":\\"purple\\"},{\\"id\\":\\"2\\",\\"text\\":\\"red\\"},{\\"id\\":\\"3\\",\\"text\\":\\"green\\"},{\\"id\\":\\"4\\",\\"text\\":\\"blue\\"},{\\"id\\":\\"5\\",\\"text\\":\\"gold\\"},{\\"id\\":\\"6\\",\\"text\\":\\"black\\"},{\\"id\\":\\"7\\",\\"text\\":\\"white\\"}]},{\\"id\\":\\"drive\\",\\"text\\":\\"Do you have a drivers license?\\",\\"answers\\":[{\\"id\\":\\"0\\",\\"text\\":\\"No, I can\'t drive.\\",\\"description\\":\\"There are so many things to push and rotate and stuff... Someone else can just drive me!\\"},{\\"id\\":\\"1\\",\\"text\\":\\"Yes, but I don\'t drive.\\",\\"description\\":\\"I prefer to be driven, and I can\'t really remember what all the road pictures are anyways.\\"},{\\"id\\":\\"2\\",\\"text\\":\\"Yes, I drive my car.\\",\\"description\\":\\"I might have needed to sleep with my instructor, but he was pretty handsome.\\"},{\\"id\\":\\"3\\",\\"text\\":\\"Yes. Motorcycles!\\",\\"description\\":\\"I look great in leather. And you should see how my hair flows when I take off my helmet!\\"}]},{\\"id\\":\\"being-told\\",\\"text\\":\\"When being told to do something, what do you do?\\",\\"answers\\":[{\\"id\\":\\"0\\",\\"text\\":\\"Do it immediately\\",\\"description\\":\\"You love being told what to do. The less you need to think, the hornier you get.\\"},{\\"id\\":\\"1\\",\\"text\\":\\"Say yes and forget\\",\\"description\\":\\"Maybe you just don\'t care, or maybe you can\'t focus on anything but sex for more than a few seconds.\\"},{\\"id\\":\\"2\\",\\"text\\":\\"Complain\\",\\"description\\":\\"Why do you have to do it? Can\'t someone else? If you have to do it, at least you want a reward...\\"},{\\"id\\":\\"3\\",\\"text\\":\\"Refuse\\",\\"description\\":\\"No one gets to tell you what to do! Who do they think they are? Do they know who you\'re sleeping with?\\"}]},{\\"id\\":\\"animal\\",\\"text\\":\\"What is your spirit animal?\\",\\"answers\\":[{\\"id\\":\\"0\\",\\"text\\":\\"bunny\\",\\"description\\":\\"Sweet and innocent. You feel anxious when away from home and like nothing better than cuddling up next to your partner.\\"},{\\"id\\":\\"1\\",\\"text\\":\\"cat\\",\\"description\\":\\"You know you\'re gorgeous. You can be cute when you want, too, but playing hard to get can be so much fun.\\"},{\\"id\\":\\"2\\",\\"text\\":\\"dog\\",\\"description\\":\\"Happy and always up for anything. Whenever someone you like is nearby, you are if anything too eager to please.\\"},{\\"id\\":\\"3\\",\\"text\\":\\"cow\\",\\"description\\":\\"Calm and relaxing, you just want to lay back, eat, sleep and have a nice time. When you do get excited, it\'s all the more noticeable.\\"}]},{\\"id\\":\\"partner\\",\\"text\\":\\"What do you look for in a partner?\\",\\"answers\\":[{\\"id\\":\\"0\\",\\"text\\":\\"a big cock\\",\\"description\\":\\"You can\'t keep your eyes off guys crotches. Sucking, licking, being bent over a counter and fucked \'til you are unconscious... You love it all, and the bigger the cock, the better it is!\\"},{\\"id\\":\\"1\\",\\"text\\":\\"a big heart\\",\\"description\\":\\"You like sex, sure, but you want the whole experience. Flowers, being held in strong arms, cuddles and sweet whispers in the night... You want him to lovingly gaze in your eyes as you cum your brains out.\\"},{\\"id\\":\\"2\\",\\"text\\":\\"a big wallet\\",\\"description\\":\\"Money does buy happiness. You want expensive clothes and jewelry, live on a super yacht and go to parties day and night. If he lets you do that, you\'ll love him.\\"},{\\"id\\":\\"3\\",\\"text\\":\\"big muscles\\",\\"description\\":\\"A tough strong guy with arms as wide as your waist, with pecs and abs to match. You get wet just thinking about it.\\"}]},{\\"id\\":\\"breast-expansion\\",\\"text\\":\\"Which would be your preferred way of increasing your breast size?\\",\\"answers\\":[{\\"id\\":\\"0\\",\\"text\\":\\"I\'m fine.\\",\\"description\\":\\"I prefer small breasts or would be fine with them.\\"},{\\"id\\":\\"1\\",\\"text\\":\\"Surgery and silicone.\\",\\"description\\":\\"Plastic and fake please!\\"},{\\"id\\":\\"2\\",\\"text\\":\\"Air inflation.\\",\\"description\\":\\"Round and light is my preference.\\"},{\\"id\\":\\"3\\",\\"text\\":\\"Hormones.\\",\\"description\\":\\"I want to be soft and milky.\\"}]},{\\"id\\":\\"shoes\\",\\"text\\":\\"Which kind of footwear do you prefer?\\",\\"answers\\":[{\\"id\\":\\"0\\",\\"text\\":\\"barefoot\\",\\"description\\":\\"More of a summer meadows kind of girl, or maybe you are mostly just on your back anyways.\\"},{\\"id\\":\\"1\\",\\"text\\":\\"sandals\\",\\"description\\":\\"With or without heels, you are rarely far from a beach.\\"},{\\"id\\":\\"2\\",\\"text\\":\\"low or medium heels\\",\\"description\\":\\"Appropriate and functional, but a bit boring. Unless you know how to pull it off.\\"},{\\"id\\":\\"3\\",\\"text\\":\\"fuck me pumps\\",\\"description\\":\\"Pumps or other high heels, you know your best look is ass up, tits out.\\"},{\\"id\\":\\"4\\",\\"text\\":\\"heeled boots\\",\\"description\\":\\"Ankle, knee or thigh-high, boots bring just that little bit of extra oomph.\\"}]},{\\"id\\":\\"describe\\",\\"text\\":\\"Which word best describes you?\\",\\"answers\\":[{\\"id\\":\\"0\\",\\"text\\":\\"Kind\\",\\"description\\":\\"You always try to help and be nice to everyone.\\"},{\\"id\\":\\"1\\",\\"text\\":\\"Clever\\",\\"description\\":\\"Maybe you\'re the smartest in your friends group, or maybe you just always know how to get what you want.\\"},{\\"id\\":\\"2\\",\\"text\\":\\"Quiet\\",\\"description\\":\\"You don\'t say much.\\"},{\\"id\\":\\"3\\",\\"text\\":\\"Funny\\",\\"description\\":\\"A good sense of humour, or just silly, you usually make people laugh.\\"},{\\"id\\":\\"4\\",\\"text\\":\\"Popular\\",\\"description\\":\\"Always the center of attention, people always flock around you.\\"},{\\"id\\":\\"5\\",\\"text\\":\\"Cocky\\",\\"description\\":\\"You know you are up to any challenge. With skills and looks like yours, nothing can stop you!\\"}]},{\\"id\\":\\"iq\\",\\"text\\":\\"What do you believe your IQ to be?\\",\\"answers\\":[{\\"id\\":\\"0\\",\\"text\\":\\"below 50 IQ\\",\\"description\\":\\"Drooling, staring blankly and rutting mindlessly are your top skills. You won\'t understand this quiz, but you\'ll probably have a good time anyways.\\"},{\\"id\\":\\"1\\",\\"text\\":\\"50 - 70 IQ\\",\\"description\\":\\"Maybe someone is helping you take this quiz. It\'s doubtful you could read or concentrate long enough on your own. It\'s lucky you\'re so cute.\\"},{\\"id\\":\\"2\\",\\"text\\":\\"70 - 80 IQ\\",\\"description\\":\\"Numbers makes your brain hurt, but you can read easy words and like brightly colored magazines. Fairly average for a bimbo, but less smarts means a happier you!\\"},{\\"id\\":\\"3\\",\\"text\\":\\"80 - 90 IQ\\",\\"description\\":\\"Not bad for a bimbo! You know how to read and count, as long as its about something interesting. Like sex, or how much those shoes cost.\\"},{\\"id\\":\\"4\\",\\"text\\":\\"90 - 100 IQ\\",\\"description\\":\\"Below average to average. You are pretty basic, but for a bimbo, you are almost a genius.\\"},{\\"id\\":\\"5\\",\\"text\\":\\"100 - 120 IQ\\",\\"description\\":\\"You think that you are above average intelligence? Okay then. If that\'s true, you must be pretty slutty or submissive to think you are a bimbo!\\"},{\\"id\\":\\"6\\",\\"text\\":\\"above 120 IQ\\",\\"description\\":\\"Wow, you gotta be pretty smart, huh? With a brain like that you could be a doctor or a scientist. But we know why you are here. Spending time on your knees really is more fun, right?\\"}]},{\\"id\\":\\"hair-color\\",\\"text\\":\\"Which is your preferred hair color?\\",\\"answers\\":[{\\"id\\":\\"0\\",\\"text\\":\\"platinum blonde\\",\\"description\\":\\"The bimbo classic. You won\'t have to speak to let them know that you\'re dumb, even if you don\'t have massive tits.\\"},{\\"id\\":\\"1\\",\\"text\\":\\"blonde\\",\\"description\\":\\"Happy and a lot of fun, blonde is a great color for the aspiring bimbo or girl next door alike.\\"},{\\"id\\":\\"2\\",\\"text\\":\\"brunette\\",\\"description\\":\\"Calm and loyal, you can easily pass as someone much smarter, especially with some glasses on.\\"},{\\"id\\":\\"3\\",\\"text\\":\\"redhead\\",\\"description\\":\\"Natural or not, red hair gives you an air of the wild. Even when it really is you who know nothing.\\"},{\\"id\\":\\"4\\",\\"text\\":\\"pink\\",\\"description\\":\\"Cute, rocky or total bimbo. Pink really is what you make of it!\\"},{\\"id\\":\\"5\\",\\"text\\":\\"black\\",\\"description\\":\\"Patient and mysterious, most people think there is a bit more to you. Looking as vapid as the blondes really takes some trying.\\"}]},{\\"id\\":\\"breast-size\\",\\"text\\":\\"What is your target breast size?\\",\\"answers\\":[{\\"id\\":\\"0\\",\\"text\\":\\"Small, up to B-cup.\\",\\"description\\":\\"Cute and sporty, most bimbos like them bigger, but that just makes you stand out more.\\"},{\\"id\\":\\"1\\",\\"text\\":\\"Large, C to DD-cup.\\",\\"description\\":\\"You like the natural look, even if you have to fill them up to get there. Cleavage, titfucks, but not too much in the way. An all-rounder.\\"},{\\"id\\":\\"2\\",\\"text\\":\\"Huge, like volleyballs.\\",\\"description\\":\\"Spherical or a bit more natural, when people look at you they see the tits first, you later. And that is how you like it.\\"},{\\"id\\":\\"3\\",\\"text\\":\\"Massive, like beachballs.\\",\\"description\\":\\"You are your boobs. No one is ever taking you seriously again. On the plus side you have some comfy pillows when being bent over, which is probably more useful to you anyway.\\"},{\\"id\\":\\"4\\",\\"text\\":\\"Immobilizingly large.\\",\\"description\\":\\"Without help, you won\'t be able to move. Not so bad if guys are lining up behind you...\\"}]},{\\"id\\":\\"lactation\\",\\"text\\":\\"Hormones can be used to induce lactation. What is your preference?\\",\\"answers\\":[{\\"id\\":\\"0\\",\\"text\\":\\"No lactation\\",\\"description\\":\\"You don\'t care for it.\\"},{\\"id\\":\\"1\\",\\"text\\":\\"A little bit can be fun\\",\\"description\\":\\"Not enough to be a hassle, but enough that your nipples get wet any time you feel horny.\\"},{\\"id\\":\\"2\\",\\"text\\":\\"Pressure sensitive\\",\\"description\\":\\"Squeeze and you can produce enough to make it look like you are in a wet t-shirt competition. Being full means the lightest touch will do it, but you never get too full.\\"},{\\"id\\":\\"3\\",\\"text\\":\\"Milk me\\",\\"description\\":\\"You produce so much milk that you need regular milking, anywhere from daily to being hooked up to a pump at all times.\\"}]},{\\"id\\":\\"relax\\",\\"text\\":\\"What is your preferred way to calm down and relax?\\",\\"answers\\":[{\\"id\\":\\"0\\",\\"text\\":\\"Take a warm bath\\",\\"description\\":\\"Pour yourself a nice warm bubbly bath, strip naked, and relax.\\"},{\\"id\\":\\"1\\",\\"text\\":\\"Eat a good meal\\",\\"description\\":\\"At a good restaurant, at home, or maybe it is the cooking itself that really makes you feel relaxed and homely.\\"},{\\"id\\":\\"2\\",\\"text\\":\\"Get a good workout in\\",\\"description\\":\\"Nothing is as good as a hard session at the gym or going for a run along the beach. You don\'t mind a reason to show yourself off, either.\\"},{\\"id\\":\\"3\\",\\"text\\":\\"Snuggle up under some blankets\\",\\"description\\":\\"Warm and cosy, you relax best with a good book, watching a movie or cuddling with your partner.\\"},{\\"id\\":\\"4\\",\\"text\\":\\"Sex!\\",\\"description\\":\\"The other options don\'t exclude sex, you just only care about getting fucked \'til kingdom come.\\"}]},{\\"id\\":\\"selfie\\",\\"text\\":\\"Do you take selfies?\\",\\"answers\\":[{\\"id\\":\\"0\\",\\"text\\":\\"Of course!\\",\\"description\\":\\"You love taking selfies! On the beach, at the gym, at home in a snug pyjamas... you love it, and your followers love you.\\"},{\\"id\\":\\"1\\",\\"text\\":\\"Only for private use\\",\\"description\\":\\"Sure you take selfies every now and again, but only to show your friend your new cute dress, or to send a flirty text to that handsome guy you met.\\"},{\\"id\\":\\"2\\",\\"text\\":\\"Not really\\",\\"description\\":\\"One picture is a thousand words, but who\'d want to read that much anyways? When you share yourself, you want it to be up close and personal.\\"}]},{\\"id\\":\\"brain-drain\\",\\"text\\":\\"If you tried to resist a brain drain beam, which skill would you most want to save?\\",\\"answers\\":[{\\"id\\":\\"0\\",\\"text\\":\\"Math knowledge\\",\\"description\\":\\"If not saved, you could retain up to high school math anyways, but you could also lose all ability to ever comprehend numbers again.\\"},{\\"id\\":\\"1\\",\\"text\\":\\"Read and write skills\\",\\"description\\":\\"If not saved, you may still be able to read if you concentrate, or you may become completely illiterate.\\"},{\\"id\\":\\"2\\",\\"text\\":\\"Vocabulary\\",\\"description\\":\\"How dumb would you sound without your vocabulary? Anywhere from ditzy bimbo to only communicating with basic single words.\\"},{\\"id\\":\\"3\\",\\"text\\":\\"Fine motor skills\\",\\"description\\":\\"Do you care about using keyboards, your phone or anything really? Then choose this, or you\'ll be misclicking and dropping things in no time.\\"},{\\"id\\":\\"4\\",\\"text\\":\\"Memory\\",\\"description\\":\\"If not saved, you can probably retain some long-term memory, but you\'ll be lucky if you can finish a sentence before forgetting what you were saying.\\"},{\\"id\\":\\"5\\",\\"text\\":\\"General knowledge\\",\\"description\\":\\"You probably know a fair few things. The planets, geography, why cars run, how doors work? Save it, or wave most of it good bye.\\"}]}]");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIyOC5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///28\n')},function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*! keydrown - v1.2.7 - 2018-12-19 - http://jeremyckahn.github.com/keydrown */\n;(function (window) {\n\nvar util = (function () {\n\n  var util = {};\n\n  /**\n   * @param {Object} obj The Object to iterate through.\n   * @param {function(*, string)} iterator The function to call for each property.\n   */\n  util.forEach = function (obj, iterator) {\n    var prop;\n    for (prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        iterator(obj[prop], prop);\n      }\n    }\n  };\n  var forEach = util.forEach;\n\n\n  /**\n   * Create a transposed copy of an Object.\n   *\n   * @param {Object} obj\n   * @return {Object}\n   */\n  util.getTranspose = function (obj) {\n    var transpose = {};\n\n    forEach(obj, function (val, key) {\n      transpose[val] = key;\n    });\n\n    return transpose;\n  };\n\n\n  /**\n   * Implementation of Array#indexOf because IE<9 doesn't support it.\n   *\n   * @param {Array} arr\n   * @param {*} val\n   * @return {number} Index of the found element or -1 if not found.\n   */\n  util.indexOf = function (arr, val) {\n    if (arr.indexOf) {\n      return arr.indexOf(val);\n    }\n\n    var i, len = arr.length;\n    for (i = 0; i < len; i++) {\n      if (arr[i] === val) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n  var indexOf = util.indexOf;\n\n\n  /**\n   * Push a value onto an array if it is not present in the array already.  Otherwise, this is a no-op.\n   *\n   * @param {Array} arr\n   * @param {*} val\n   * @return {boolean} Whether or not the value was added to the array.\n   */\n  util.pushUnique = function (arr, val) {\n    if (indexOf(arr, val) === -1) {\n      arr.push(val);\n      return true;\n    }\n\n    return false;\n  };\n\n\n  /**\n   * Remove a value from an array.  Assumes there is only one instance of the\n   * value present in the array.\n   *\n   * @param {Array} arr\n   * @param {*} val\n   * @return {*} The value that was removed from arr.  Returns undefined if\n   * nothing was removed.\n   */\n  util.removeValue = function (arr, val) {\n    var index = indexOf(arr, val);\n\n    if (index !== -1) {\n      return arr.splice(index, 1)[0];\n    }\n  };\n\n\n  /**\n   * Cross-browser function for listening for and handling an event on the\n   * document element.\n   *\n   * @param {string} eventName\n   * @param {function} handler\n   */\n  util.documentOn = function (eventName, handler) {\n    if (window.addEventListener) {\n      window.addEventListener(eventName, handler, false);\n    } else if (document.attachEvent) {\n      document.attachEvent('on' + eventName, handler);\n    }\n  };\n\n\n  /**\n   * Shim for requestAnimationFrame.  See:\n   * http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   */\n  util.requestAnimationFrame = (function () {\n    return window.requestAnimationFrame  ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame    ||\n      function( callback ){\n        window.setTimeout(callback, 1000 / 60);\n      };\n  })();\n\n\n  /**\n   * An empty function.  NOOP!\n   */\n  util.noop = function () {};\n\n  return util;\n\n}());\n\n/**\n * Lookup table of keys to keyCodes.\n *\n * @type {Object.<number>}\n */\nvar KEY_MAP = {\n  'ZERO': 48,\n  'ONE': 49,\n  'TWO': 50,\n  'THREE': 51,\n  'FOUR': 52,\n  'FIVE': 53,\n  'SIX': 54,\n  'SEVEN': 55,\n  'EIGHT': 56,\n  'NINE': 57,\n  'A': 65,\n  'B': 66,\n  'C': 67,\n  'D': 68,\n  'E': 69,\n  'F': 70,\n  'G': 71,\n  'H': 72,\n  'I': 73,\n  'J': 74,\n  'K': 75,\n  'L': 76,\n  'M': 77,\n  'N': 78,\n  'O': 79,\n  'P': 80,\n  'Q': 81,\n  'R': 82,\n  'S': 83,\n  'T': 84,\n  'U': 85,\n  'V': 86,\n  'W': 87,\n  'X': 88,\n  'Y': 89,\n  'Z': 90,\n  'ENTER': 13,\n  'SHIFT': 16,\n  'ESC': 27,\n  'SPACE': 32,\n  'LEFT': 37,\n  'UP': 38,\n  'RIGHT': 39,\n  'DOWN': 40,\n  'BACKSPACE': 8,\n  'DELETE': 46,\n  'TAB': 9,\n  'TILDE': 192\n};\n\n\n/**\n * The transposed version of KEY_MAP.\n *\n * @type {Object.<string>}\n */\nvar TRANSPOSED_KEY_MAP = util.getTranspose(KEY_MAP);\n\n/*!\n * @type Array.<string>\n */\nvar keysDown = [];\n\nvar Key = (function () {\n\n  'use strict';\n\n  /**\n   * Represents a key on the keyboard.  You'll never actually call this method\n   * directly; Key Objects for every key that Keydrown supports are created for\n   * you when the library is initialized (as in, when the file is loaded).  You\n   * will, however, use the `prototype` methods below to bind functions to key\n   * states.\n   *\n   * @param {number} keyCode The keyCode of the key.\n   * @constructor\n   * @class kd.Key\n   */\n  function Key (keyCode) {\n    this.keyCode = keyCode;\n    this.cachedKeypressEvent = null;\n  }\n\n\n  /*!\n   * The function to be invoked on every tick that the key is held down for.\n   *\n   * @type {function}\n   */\n  Key.prototype._downHandler = util.noop;\n\n\n  /*!\n   * The function to be invoked when the key is released.\n   *\n   * @type {function}\n   */\n  Key.prototype._upHandler = util.noop;\n\n\n  /*!\n   * The function to be invoked when the key is pressed.\n   *\n   * @type {function}\n   */\n  Key.prototype._pressHandler = util.noop;\n\n\n  /*!\n   * Private helper function that binds or invokes a hander for `down`, `up',\n   * or `press` for a `Key`.\n   *\n   * @param {Key} key\n   * @param {string} handlerName\n   * @param {function=} opt_handler If omitted, the handler is invoked.\n   * @param {KeyboardEvent=} opt_evt If this function is being called by a\n   * keyboard event handler, this is the raw KeyboardEvent Object provided from\n   * the browser.\n   */\n  function bindOrFire (key, handlerName, opt_handler, opt_evt) {\n    if (opt_handler) {\n      key[handlerName] = opt_handler;\n    } else {\n      key[handlerName](opt_evt);\n    }\n  }\n\n\n  /**\n   * Returns whether the key is currently pressed or not.\n   *\n   * @method isDown\n   * @return {boolean} True if the key is down, otherwise false.\n   */\n  Key.prototype.isDown = function () {\n    return util.indexOf(keysDown, this.keyCode) !== -1;\n  };\n\n\n  /**\n   * Bind a function to be called when the key is held down.\n   *\n   * @method down\n   * @param {function=} opt_handler The function to be called when the key is\n   * held down.  If omitted, this function invokes whatever handler was\n   * previously bound.\n   */\n  Key.prototype.down = function (opt_handler) {\n    bindOrFire(this, '_downHandler', opt_handler, this.cachedKeypressEvent);\n  };\n\n\n  /**\n   * Bind a function to be called when the key is released.\n   *\n   * @method up\n   * @param {function=} opt_handler The function to be called when the key is\n   * released.  If omitted, this function invokes whatever handler was\n   * previously bound.\n   * @param {KeyboardEvent=} opt_evt If this function is being called by the\n   * keyup event handler, this is the raw KeyboardEvent Object provided from\n   * the browser.  This should generally not be provided by client code.\n   */\n  Key.prototype.up = function (opt_handler, opt_evt) {\n    bindOrFire(this, '_upHandler', opt_handler, opt_evt);\n  };\n\n\n  /**\n   * Bind a function to be called when the key is pressed.  This handler will\n   * not fire again until the key is released — it does not repeat.\n   *\n   * @method press\n   * @param {function=} opt_handler The function to be called once when the key\n   * is pressed.  If omitted, this function invokes whatever handler was\n   * previously bound.\n   * @param {KeyboardEvent=} opt_evt If this function is being called by the\n   * keydown event handler, this is the raw KeyboardEvent Object provided from\n   * the browser.  This should generally not be provided by client code.\n   */\n  Key.prototype.press = function (opt_handler, opt_evt) {\n    this.cachedKeypressEvent = opt_evt;\n    bindOrFire(this, '_pressHandler', opt_handler, opt_evt);\n  };\n\n\n  /**\n   * Remove the handler that was bound with `{{#crossLink\n   * \"kd.Key/down:method\"}}{{/crossLink}}`.\n   * @method unbindDown\n   */\n  Key.prototype.unbindDown = function () {\n    this._downHandler = util.noop;\n  };\n\n\n  /**\n   * Remove the handler that was bound with `{{#crossLink\n   * \"kd.Key/up:method\"}}{{/crossLink}}`.\n   * @method unbindUp\n   */\n  Key.prototype.unbindUp = function () {\n    this._upHandler = util.noop;\n  };\n\n\n  /**\n   * Remove the handler that was bound with `{{#crossLink\n   * \"kd.Key/press:method\"}}{{/crossLink}}`.\n   * @method unbindPress\n   */\n  Key.prototype.unbindPress = function () {\n    this._pressHandler = util.noop;\n  };\n\n  return Key;\n\n}());\n\nvar kd = (function (keysDown) {\n\n  'use strict';\n\n  /**\n   * @class kd\n   */\n  var kd = {};\n  kd.Key = Key;\n\n  var isRunning = false;\n\n  var now = Date.now\n     ? Date.now\n     : function () {return +new Date();};\n\n  var previousUpdateTime = now();\n\n  /**\n   * Evaluate which keys are held down and invoke their handler functions.\n   * @method tick\n   */\n  kd.tick = function () {\n    var i, len = keysDown.length;\n    for (i = 0; i < len; i++) {\n      var keyCode = keysDown[i];\n\n      var keyName = TRANSPOSED_KEY_MAP[keyCode];\n      if (keyName) {\n        kd[keyName].down();\n      }\n    }\n  };\n\n\n  /**\n   * A basic run loop.  `handler` gets called approximately 60 times a second.\n   *\n   * @param {Function(number, number)} handler The callback function to call on\n   * every tick.  You likely want to call [kd.tick](#method_tick) in this\n   * function.  This callback receives the time elapsed since the previous\n   * execution of the callback as the first parameter, and the current time\n   * stamp as the second.\n   * @method run\n   */\n  kd.run = function (handler) {\n    isRunning = true;\n    var currentTime = now();\n    var timeSinceLastUpdate = currentTime - previousUpdateTime;\n\n    util.requestAnimationFrame.call(window, function () {\n      if (!isRunning) {\n        return;\n      }\n\n      kd.run(handler);\n      handler(timeSinceLastUpdate, currentTime);\n    });\n\n    previousUpdateTime = currentTime;\n  };\n\n\n  /**\n   * Cancels the loop created by [run](#method_run).\n   * @method stop\n   */\n  kd.stop = function () {\n    isRunning = false;\n  };\n\n\n  // SETUP\n  //\n\n\n  // Initialize the KEY Objects\n  util.forEach(KEY_MAP, function (keyCode, keyName) {\n    kd[keyName] = new Key(keyCode);\n  });\n\n  util.documentOn('keydown', function (evt) {\n    var keyCode = evt.keyCode;\n    var keyName = TRANSPOSED_KEY_MAP[keyCode];\n    var isNew = util.pushUnique(keysDown, keyCode);\n    var key = kd[keyName];\n\n    if (key) {\n      var cachedKeypressEvent = key.cachedKeypressEvent || {};\n\n      // If a modifier key was held down the last time that this button was\n      // pressed, and it is pressed again without the modifier key being\n      // released, it is considered a newly-pressed key.  This is to work\n      // around the fact that the \"keyup\" event does not fire for the modified\n      // key until the modifier button is also released, which poses a problem\n      // for repeated, modified key presses such as hitting ctrl/meta+Z for\n      // rapid \"undo\" actions.\n      if (cachedKeypressEvent.ctrlKey ||\n          cachedKeypressEvent.shiftKey ||\n          cachedKeypressEvent.metaKey) {\n        isNew = true;\n      }\n\n      if (isNew) {\n        key.press(null, evt);\n      }\n    }\n  });\n\n  util.documentOn('keyup', function (evt) {\n    var keyCode = util.removeValue(keysDown, evt.keyCode);\n\n    var keyName = TRANSPOSED_KEY_MAP[keyCode];\n    if (keyName) {\n      kd[keyName].up(null, evt);\n    }\n  });\n\n  // Stop firing the \"down\" handlers if the user loses focus of the browser\n  // window.\n  util.documentOn('blur', function (evt) {\n    // Fire the \"up\" handler for each key that is currently held down\n    util.forEach(keysDown, function (keyCode) {\n      var mappedKey = TRANSPOSED_KEY_MAP[keyCode];\n      if (mappedKey) {\n        kd[mappedKey].up();\n      }\n    });\n\n    keysDown.length = 0;\n  });\n\n\n  return kd;\n\n // The variables passed into the closure here are defined in kd.key.js.\n}(keysDown));\n\nif ( true && typeof module.exports === \"object\") {\n  // Keydrown was loaded as a CommonJS module (by Browserify, for example).\n  module.exports = kd;\n} else if (true) {\n  // Keydrown was loaded as an AMD module.\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n    return kd;\n  }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {}\n\n} (window));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///29\n")}]);